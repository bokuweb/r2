{"version":3,"file":"xterm.js","mappings":"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,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,QAEzCC,EAAiB,CACrB,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,SAIZ,IAAIC,EAsBJ,kBAGE33D,cAEE,GAJc,KAAA43D,QAAU,KAInBD,EAAO,CACVA,EAAQ,IAAIX,WAAW,OACvBW,EAAM77B,KAAK,GACX67B,EAAM,GAAK,EAEXA,EAAM77B,KAAK,EAAG,EAAG,IACjB67B,EAAM77B,KAAK,EAAG,IAAM,KAIpB67B,EAAM77B,KAAK,EAAG,KAAQ,MACtB67B,EAAM,MAAU,EAChBA,EAAM,MAAU,EAChBA,EAAM77B,KAAK,EAAG,MAAQ,OACtB67B,EAAM,OAAU,EAEhBA,EAAM77B,KAAK,EAAG,MAAQ,OACtB67B,EAAM77B,KAAK,EAAG,MAAQ,OACtB67B,EAAM77B,KAAK,EAAG,MAAQ,OACtB67B,EAAM77B,KAAK,EAAG,MAAQ,OACtB67B,EAAM77B,KAAK,EAAG,MAAQ,OACtB67B,EAAM77B,KAAK,EAAG,MAAQ,OAOtB,IAAK,IAAIiM,EAAI,EAAGA,EAAI0vB,EAAch2D,SAAUsmC,EAC1C4vB,EAAM77B,KAAK,EAAG27B,EAAc1vB,GAAG,GAAI0vB,EAAc1vB,GAAG,GAAK,E,CAG/D,CAEOiY,QAAQ6X,GACb,OAAIA,EAAM,GAAW,EACjBA,EAAM,IAAY,EAClBA,EAAM,MAAcF,EAAME,GA9DlC,SAAkBC,EAAaz1C,GAC7B,IAEI4kC,EAFAhzC,EAAM,EACNE,EAAMkO,EAAK5gB,OAAS,EAExB,GAAIq2D,EAAMz1C,EAAK,GAAG,IAAMy1C,EAAMz1C,EAAKlO,GAAK,GACtC,OAAO,EAET,KAAOA,GAAOF,GAEZ,GADAgzC,EAAOhzC,EAAME,GAAQ,EACjB2jD,EAAMz1C,EAAK4kC,GAAK,GAClBhzC,EAAMgzC,EAAM,MACP,MAAI6Q,EAAMz1C,EAAK4kC,GAAK,IAGzB,OAAO,EAFP9yC,EAAM8yC,EAAM,C,CAKhB,OAAO,CACT,CA6CQ8Q,CAASF,EAAKH,GAAwB,EACrCG,GAAO,QAAWA,GAAO,QAAaA,GAAO,QAAWA,GAAO,OAAiB,EAC9E,CACT,E,uFC5HF,gBACA,SA6BA,MAAaxmB,UAAoB,EAAAtxC,WAY/BC,YAAoBg4D,GAClB73D,QADkB,KAAA63D,QAAAA,EAXZ,KAAAhnB,aAAwC,GACxC,KAAAinB,WAA2C,GAC3C,KAAAC,aAAe,EACf,KAAAC,cAAgB,EAChB,KAAAC,gBAAiB,EACjB,KAAAC,WAAa,EACb,KAAAC,eAAgB,EAEP,KAAAzoB,eAAiBtvC,KAAK6B,SAAS,IAAI,EAAAoI,cACpC,KAAAslC,cAAgBvvC,KAAKsvC,eAAenlC,KAIpD,CAEOumC,kBACL1wC,KAAK+3D,eAAgB,CACvB,CAKO3mB,UAAUtvB,EAA2BuvB,GAI1C,QAA2B7mC,IAAvB6mC,GAAoCrxC,KAAK83D,WAAazmB,EAIxD,YADArxC,KAAK83D,WAAa,GAWpB,GAPA93D,KAAK23D,cAAgB71C,EAAK5gB,OAC1BlB,KAAKywC,aAAajsC,KAAKsd,GACvB9hB,KAAK03D,WAAWlzD,UAAKgG,GAGrBxK,KAAK83D,aAED93D,KAAK63D,eACP,OAQF,IAAIG,EACJ,IAPAh4D,KAAK63D,gBAAiB,EAOfG,EAAQh4D,KAAKywC,aAAarsC,SAAS,CACxCpE,KAAKy3D,QAAQO,GACb,MAAMC,EAAKj4D,KAAK03D,WAAWtzD,QACvB6zD,GAAIA,G,CAIVj4D,KAAK23D,aAAe,EACpB33D,KAAK43D,cAAgB,WAGrB53D,KAAK63D,gBAAiB,EACtB73D,KAAK83D,WAAa,CACpB,CAEO3mB,MAAMrvB,EAA2BrR,GACtC,GAAIzQ,KAAK23D,aApFa,IAqFpB,MAAM,IAAIh2D,MAAM,+DAIlB,IAAK3B,KAAKywC,aAAavvC,OAAQ,CAM7B,GALAlB,KAAK43D,cAAgB,EAKjB53D,KAAK+3D,cAMP,OALA/3D,KAAK+3D,eAAgB,EACrB/3D,KAAK23D,cAAgB71C,EAAK5gB,OAC1BlB,KAAKywC,aAAajsC,KAAKsd,GACvB9hB,KAAK03D,WAAWlzD,KAAKiM,QACrBzQ,KAAKk4D,cAIP7yD,YAAW,IAAMrF,KAAKk4D,e,CAGxBl4D,KAAK23D,cAAgB71C,EAAK5gB,OAC1BlB,KAAKywC,aAAajsC,KAAKsd,GACvB9hB,KAAK03D,WAAWlzD,KAAKiM,EACvB,CA8BUynD,YAAYC,EAAmB,EAAGpnB,GAAyB,GACnE,MAAMrpB,EAAYywC,GAAY5xC,KAAKC,MACnC,KAAOxmB,KAAKywC,aAAavvC,OAASlB,KAAK43D,eAAe,CACpD,MAAM91C,EAAO9hB,KAAKywC,aAAazwC,KAAK43D,eAC9BjnD,EAAS3Q,KAAKy3D,QAAQ31C,EAAMivB,GAClC,GAAIpgC,EAAQ,CAuBV,MAAMynD,EAAsC5wB,GAAejhB,KAAKC,MAAQkB,GAhKvD,GAiKbriB,YAAW,IAAMrF,KAAKk4D,YAAY,EAAG1wB,KACrCxnC,KAAKk4D,YAAYxwC,EAAW8f,GA0BhC,YAJA72B,EAAO0tC,OAAMC,IACX5e,gBAAe,KAAO,MAAM4e,CAAG,IACxBL,QAAQoa,SAAQ,MACtBC,KAAKF,E,CAIV,MAAMH,EAAKj4D,KAAK03D,WAAW13D,KAAK43D,eAKhC,GAJIK,GAAIA,IACRj4D,KAAK43D,gBACL53D,KAAK23D,cAAgB71C,EAAK5gB,OAEtBqlB,KAAKC,MAAQkB,GApME,GAqMjB,K,CAGA1nB,KAAKywC,aAAavvC,OAASlB,KAAK43D,eAG9B53D,KAAK43D,cApMuB,KAqM9B53D,KAAKywC,aAAezwC,KAAKywC,aAAatK,MAAMnmC,KAAK43D,eACjD53D,KAAK03D,WAAa13D,KAAK03D,WAAWvxB,MAAMnmC,KAAK43D,eAC7C53D,KAAK43D,cAAgB,GAEvBvyD,YAAW,IAAMrF,KAAKk4D,kBAEtBl4D,KAAKywC,aAAavvC,OAAS,EAC3BlB,KAAK03D,WAAWx2D,OAAS,EACzBlB,KAAK23D,aAAe,EACpB33D,KAAK43D,cAAgB,GAEvB53D,KAAKsvC,eAAe9/B,MACtB,EA/MF,e,kGC7BA,MAAM+oD,EAAU,qKAEVC,EAAW,aAiDjB,SAASC,EAAInlB,EAAWolB,GACtB,MAAMnsB,EAAI+G,EAAE5tC,SAAS,IACfizD,EAAKpsB,EAAErrC,OAAS,EAAI,IAAMqrC,EAAIA,EACpC,OAAQmsB,GACN,KAAK,EACH,OAAOnsB,EAAE,GACX,KAAK,EACH,OAAOosB,EACT,KAAK,GACH,OAAQA,EAAKA,GAAIxyB,MAAM,EAAG,GAC5B,QACE,OAAOwyB,EAAKA,EAElB,CAjDA,sBAA2B72C,GACzB,IAAKA,EAAM,OAEX,IAAI82C,EAAM92C,EAAKu0C,cACf,GAA4B,IAAxBuC,EAAI9tD,QAAQ,QAAe,CAE7B8tD,EAAMA,EAAIzyB,MAAM,GAChB,MAAMqc,EAAI+V,EAAQhU,KAAKqU,GACvB,GAAIpW,EAAG,CACL,MAAMqW,EAAOrW,EAAE,GAAK,GAAKA,EAAE,GAAK,IAAMA,EAAE,GAAK,KAAO,MACpD,MAAO,CACL/uC,KAAKmV,MAAMkI,SAAS0xB,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAK,IAAMqW,EAAO,KAChEplD,KAAKmV,MAAMkI,SAAS0xB,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAK,IAAMqW,EAAO,KAChEplD,KAAKmV,MAAMkI,SAAS0xB,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAK,IAAMqW,EAAO,K,OAG/D,GAAyB,IAArBD,EAAI9tD,QAAQ,OAErB8tD,EAAMA,EAAIzyB,MAAM,GACZqyB,EAASjU,KAAKqU,IAAQ,CAAC,EAAG,EAAG,EAAG,IAAI7mD,SAAS6mD,EAAI13D,SAAS,CAC5D,MAAM43D,EAAMF,EAAI13D,OAAS,EACnByP,EAAmC,CAAC,EAAG,EAAG,GAChD,IAAK,IAAItR,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1B,MAAMu2B,EAAI9E,SAAS8nC,EAAIzyB,MAAM2yB,EAAMz5D,EAAGy5D,EAAMz5D,EAAIy5D,GAAM,IACtDnoD,EAAOtR,GAAa,IAARy5D,EAAYljC,GAAK,EAAY,IAARkjC,EAAYljC,EAAY,IAARkjC,EAAYljC,GAAK,EAAIA,GAAK,C,CAE7E,OAAOjlB,C,CAOb,EAqBA,uBAA4BkH,EAAiC6gD,EAAe,IAC1E,MAAOlxB,EAAGC,EAAGC,GAAK7vB,EAClB,MAAO,OAAO4gD,EAAIjxB,EAAGkxB,MAASD,EAAIhxB,EAAGixB,MAASD,EAAI/wB,EAAGgxB,IACvD,C,uFCtBa,EAAAK,cAAgB,G,kGClD7B,eACA,UACA,UAEMC,EAAgC,GAEtC,gCACU,KAAAC,UAA6CpqD,OAAOqqD,OAAO,MAC3D,KAAAC,QAAyBH,EACzB,KAAAI,OAAiB,EACjB,KAAAC,WAAqC,OACrC,KAAAC,OAA+B,CACrC7iB,QAAQ,EACR8iB,aAAc,EACdC,aAAa,EA8GjB,CA3GS/vD,UACLzJ,KAAKi5D,UAAYpqD,OAAOqqD,OAAO,MAC/Bl5D,KAAKq5D,WAAa,OAClBr5D,KAAKm5D,QAAUH,CACjB,CAEOS,gBAAgB9hD,EAAerO,QACNkB,IAA1BxK,KAAKi5D,UAAUthD,KACjB3X,KAAKi5D,UAAUthD,GAAS,IAE1B,MAAM+hD,EAAc15D,KAAKi5D,UAAUthD,GAEnC,OADA+hD,EAAYl1D,KAAK8E,GACV,CACLG,QAAS,KACP,MAAMkwD,EAAeD,EAAY5uD,QAAQxB,IACnB,IAAlBqwD,GACFD,EAAY3uD,OAAO4uD,EAAc,E,EAIzC,CAEOC,aAAajiD,GACd3X,KAAKi5D,UAAUthD,WAAe3X,KAAKi5D,UAAUthD,EACnD,CAEOkiD,mBAAmBvwD,GACxBtJ,KAAKq5D,WAAa/vD,CACpB,CAEOwN,QAEL,GAAI9W,KAAKm5D,QAAQj4D,OACf,IAAK,IAAI2M,EAAI7N,KAAKs5D,OAAO7iB,OAASz2C,KAAKs5D,OAAOC,aAAe,EAAIv5D,KAAKm5D,QAAQj4D,OAAS,EAAG2M,GAAK,IAAKA,EAClG7N,KAAKm5D,QAAQtrD,GAAGisD,QAAO,GAG3B95D,KAAKs5D,OAAO7iB,QAAS,EACrBz2C,KAAKm5D,QAAUH,EACfh5D,KAAKo5D,OAAS,CAChB,CAEOW,KAAKpiD,EAAes/B,GAKzB,GAHAj3C,KAAK8W,QACL9W,KAAKo5D,OAASzhD,EACd3X,KAAKm5D,QAAUn5D,KAAKi5D,UAAUthD,IAAUqhD,EACnCh5D,KAAKm5D,QAAQj4D,OAGhB,IAAK,IAAI2M,EAAI7N,KAAKm5D,QAAQj4D,OAAS,EAAG2M,GAAK,EAAGA,IAC5C7N,KAAKm5D,QAAQtrD,GAAGksD,KAAK9iB,QAHvBj3C,KAAKq5D,WAAWr5D,KAAKo5D,OAAQ,OAAQniB,EAMzC,CAEO+iB,IAAIl4C,EAAmB7f,EAAeC,GAC3C,GAAKlC,KAAKm5D,QAAQj4D,OAGhB,IAAK,IAAI2M,EAAI7N,KAAKm5D,QAAQj4D,OAAS,EAAG2M,GAAK,EAAGA,IAC5C7N,KAAKm5D,QAAQtrD,GAAGmsD,IAAIl4C,EAAM7f,EAAOC,QAHnClC,KAAKq5D,WAAWr5D,KAAKo5D,OAAQ,OAAO,IAAAa,eAAcn4C,EAAM7f,EAAOC,GAMnE,CAEO43D,OAAOI,EAAkBnpB,GAAyB,GACvD,GAAK/wC,KAAKm5D,QAAQj4D,OAEX,CACL,IAAIi5D,GAA4C,EAC5CtsD,EAAI7N,KAAKm5D,QAAQj4D,OAAS,EAC1Bs4D,GAAc,EAOlB,GANIx5D,KAAKs5D,OAAO7iB,SACd5oC,EAAI7N,KAAKs5D,OAAOC,aAAe,EAC/BY,EAAgBppB,EAChByoB,EAAcx5D,KAAKs5D,OAAOE,YAC1Bx5D,KAAKs5D,OAAO7iB,QAAS,IAElB+iB,IAAiC,IAAlBW,EAAyB,CAC3C,KAAOtsD,GAAK,IACVssD,EAAgBn6D,KAAKm5D,QAAQtrD,GAAGisD,OAAOI,IACjB,IAAlBC,GAFStsD,IAIN,GAAIssD,aAAyBlc,QAIlC,OAHAj+C,KAAKs5D,OAAO7iB,QAAS,EACrBz2C,KAAKs5D,OAAOC,aAAe1rD,EAC3B7N,KAAKs5D,OAAOE,aAAc,EACnBW,EAGXtsD,G,CAGF,KAAOA,GAAK,EAAGA,IAEb,GADAssD,EAAgBn6D,KAAKm5D,QAAQtrD,GAAGisD,QAAO,GACnCK,aAAyBlc,QAI3B,OAHAj+C,KAAKs5D,OAAO7iB,QAAS,EACrBz2C,KAAKs5D,OAAOC,aAAe1rD,EAC3B7N,KAAKs5D,OAAOE,aAAc,EACnBW,C,MAhCXn6D,KAAKq5D,WAAWr5D,KAAKo5D,OAAQ,SAAUc,GAoCzCl6D,KAAKm5D,QAAUH,EACfh5D,KAAKo5D,OAAS,CAChB,GAIF,MAAMgB,EAAe,IAAI,EAAAC,OACzBD,EAAaE,SAAS,GAMtB,mBAKE76D,YAAoB86D,GAAA,KAAAA,SAAAA,EAJZ,KAAA5U,MAAQ,GACR,KAAA6U,QAAmBJ,EACnB,KAAAK,WAAqB,CAEkE,CAExFV,KAAK9iB,GAKVj3C,KAAKw6D,QAAWvjB,EAAO/1C,OAAS,GAAK+1C,EAAOA,OAAO,GAAMA,EAAOrL,QAAUwuB,EAC1Ep6D,KAAK2lD,MAAQ,GACb3lD,KAAKy6D,WAAY,CACnB,CAEOT,IAAIl4C,EAAmB7f,EAAeC,GACvClC,KAAKy6D,YAGTz6D,KAAK2lD,QAAS,IAAAsU,eAAcn4C,EAAM7f,EAAOC,GACrClC,KAAK2lD,MAAMzkD,OAAS,EAAA63D,gBACtB/4D,KAAK2lD,MAAQ,GACb3lD,KAAKy6D,WAAY,GAErB,CAEOX,OAAOI,GACZ,IAAIQ,GAAkC,EACtC,GAAI16D,KAAKy6D,UACPC,GAAM,OACD,GAAIR,IACTQ,EAAM16D,KAAKu6D,SAASv6D,KAAK2lD,MAAO3lD,KAAKw6D,SACjCE,aAAezc,SAGjB,OAAOyc,EAAIpC,MAAKna,IACdn+C,KAAKw6D,QAAUJ,EACfp6D,KAAK2lD,MAAQ,GACb3lD,KAAKy6D,WAAY,EACVtc,KAOb,OAHAn+C,KAAKw6D,QAAUJ,EACfp6D,KAAK2lD,MAAQ,GACb3lD,KAAKy6D,WAAY,EACVC,CACT,E,2ICvLF,eAEA,UACA,UACA,UAgBA,MAAaC,EAGXl7D,YAAYyB,GACVlB,KAAKo3D,MAAQ,IAAIX,WAAWv1D,EAC9B,CAOO05D,WAAW56C,EAAsBqvC,GACtCrvD,KAAKo3D,MAAM77B,KAAKvb,GAAU,EAAsCqvC,EAClE,CASOhvD,IAAIk3C,EAAchpC,EAAoByR,EAAsBqvC,GACjErvD,KAAKo3D,MAAM7oD,GAAS,EAAgCgpC,GAAQv3B,GAAU,EAAsCqvC,CAC9G,CASOwL,QAAQC,EAAiBvsD,EAAoByR,EAAsBqvC,GACxE,IAAK,IAAIhwD,EAAI,EAAGA,EAAIy7D,EAAM55D,OAAQ7B,IAChCW,KAAKo3D,MAAM7oD,GAAS,EAAgCusD,EAAMz7D,IAAM2gB,GAAU,EAAsCqvC,CAEpH,EAtCF,oBA2CA,MAAM0L,EAAsB,IAOf,EAAAC,uBAAyB,WACpC,MAAM5D,EAAyB,IAAIuD,EAAgB,MAI7CM,EAAYrwB,MAAMswB,MAAM,KAAMtwB,MADhB,MACoC79B,KAAI,CAACouD,EAAa97D,IAAcA,IAClFmoC,EAAI,CAACvlC,EAAeC,IAA0B+4D,EAAU90B,MAAMlkC,EAAOC,GAGrEk5D,EAAa5zB,EAAE,GAAM,KACrB6zB,EAAc7zB,EAAE,EAAM,IAC5B6zB,EAAY72D,KAAK,IACjB62D,EAAY72D,KAAK02D,MAAMG,EAAa7zB,EAAE,GAAM,KAE5C,MAAM8zB,EAAmB9zB,EAAE,EAAoB,IAC/C,IAAIj5B,EAOJ,IAAKA,KAJL6oD,EAAMwD,WAAW,EAAD,GAEhBxD,EAAMyD,QAAQO,EAAY,EAAF,KAEVE,EACZlE,EAAMyD,QAAQ,CAAC,GAAM,GAAM,IAAM,KAAOtsD,EAAO,EAAF,GAC7C6oD,EAAMyD,QAAQrzB,EAAE,IAAM,KAAOj5B,EAAO,EAAF,GAClC6oD,EAAMyD,QAAQrzB,EAAE,IAAM,KAAOj5B,EAAO,EAAF,GAClC6oD,EAAM/2D,IAAI,IAAMkO,EAAO,EAAF,GACrB6oD,EAAM/2D,IAAI,GAAMkO,EAAO,GAAF,GACrB6oD,EAAM/2D,IAAI,IAAMkO,EAAO,EAAF,GACrB6oD,EAAMyD,QAAQ,CAAC,IAAM,IAAM,KAAOtsD,EAAO,EAAF,GACvC6oD,EAAM/2D,IAAI,IAAMkO,EAAO,GAAF,GACrB6oD,EAAM/2D,IAAI,IAAMkO,EAAO,GAAF,GAuFvB,OApFA6oD,EAAMyD,QAAQQ,EAAa,EAAF,KACzBjE,EAAMyD,QAAQQ,EAAa,EAAF,KACzBjE,EAAM/2D,IAAI,IAAM,EAAF,KACd+2D,EAAMyD,QAAQQ,EAAa,EAAF,KACzBjE,EAAMyD,QAAQQ,EAAa,EAAF,KACzBjE,EAAM/2D,IAAI,IAAM,EAAF,KACd+2D,EAAMyD,QAAQQ,EAAa,EAAF,KACzBjE,EAAM/2D,IAAI,IAAM,EAAF,KACd+2D,EAAMyD,QAAQQ,EAAa,EAAF,KACzBjE,EAAMyD,QAAQQ,EAAa,EAAF,KACzBjE,EAAM/2D,IAAI,IAAM,EAAF,KACd+2D,EAAMyD,QAAQQ,EAAa,EAAF,KACzBjE,EAAM/2D,IAAI,IAAM,EAAF,KAEd+2D,EAAM/2D,IAAI,GAAM,EAAF,KACd+2D,EAAMyD,QAAQO,EAAY,EAAF,KACxBhE,EAAM/2D,IAAI,IAAM,EAAF,KACd+2D,EAAMyD,QAAQ,CAAC,IAAM,GAAM,GAAM,GAAM,GAAO,EAAF,KAC5CzD,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,KAE3B4vB,EAAMyD,QAAQ,CAAC,GAAM,GAAM,IAAO,EAAF,KAChCzD,EAAMyD,QAAQO,EAAY,EAAF,KACxBhE,EAAMyD,QAAQQ,EAAa,EAAF,KACzBjE,EAAM/2D,IAAI,IAAM,EAAF,KACd+2D,EAAM/2D,IAAI,IAAM,EAAF,KAEd+2D,EAAM/2D,IAAI,GAAM,EAAF,MACd+2D,EAAMyD,QAAQrzB,EAAE,GAAM,KAAO,EAAF,KAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,KAC3B4vB,EAAMyD,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,KACtCzD,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,KAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,KAAO,EAAF,KAC3B4vB,EAAMyD,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,KACtCzD,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,KAC3B4vB,EAAM/2D,IAAI,IAAM,EAAF,KACd+2D,EAAMyD,QAAQrzB,EAAE,GAAM,KAAO,EAAF,KAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,KAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,KAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,KAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,KAAO,EAAF,KAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,KAE3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,KAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,KAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,KAAO,EAAF,MAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,MAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,MAC3B4vB,EAAMyD,QAAQ,CAAC,GAAM,GAAM,IAAO,EAAF,MAChCzD,EAAMyD,QAAQrzB,EAAE,GAAM,KAAO,EAAF,MAE3B4vB,EAAM/2D,IAAI,GAAM,EAAF,MACd+2D,EAAMyD,QAAQQ,EAAa,EAAF,KACzBjE,EAAM/2D,IAAI,IAAM,EAAF,KACd+2D,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,KAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,MAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,EAAF,MAC3B4vB,EAAMyD,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,EAAF,MACtCzD,EAAMyD,QAAQQ,EAAa,GAAF,MACzBjE,EAAMyD,QAAQrzB,EAAE,GAAM,KAAO,GAAF,MAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,GAAF,MAC3B4vB,EAAMyD,QAAQQ,EAAa,GAAF,MACzBjE,EAAM/2D,IAAI,IAAM,GAAF,MACd+2D,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,GAAF,MAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,GAAF,MAC3B4vB,EAAMyD,QAAQ,CAAC,GAAM,GAAM,GAAM,IAAO,GAAF,MACtCzD,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,GAAF,MAC3B4vB,EAAMyD,QAAQQ,EAAa,GAAF,MACzBjE,EAAM/2D,IAAI,IAAM,GAAF,MACd+2D,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,GAAF,MAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,GAAF,MAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,IAAO,GAAF,MAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,KAAO,GAAF,OAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,KAAO,GAAF,OAC3B4vB,EAAMyD,QAAQrzB,EAAE,GAAM,KAAO,EAAF,OAC3B4vB,EAAMyD,QAAQQ,EAAa,GAAF,OACzBjE,EAAMyD,QAAQO,EAAY,GAAF,OACxBhE,EAAM/2D,IAAI,IAAM,GAAF,MACd+2D,EAAMyD,QAAQ,CAAC,GAAM,IAAM,GAAM,IAAO,GAAF,MAEtCzD,EAAM/2D,IAAI06D,EAAqB,EAAF,KAC7B3D,EAAM/2D,IAAI06D,EAAqB,EAAF,KAC7B3D,EAAM/2D,IAAI06D,EAAqB,EAAF,KAC7B3D,EAAM/2D,IAAI06D,EAAqB,GAAF,MAC7B3D,EAAM/2D,IAAI06D,EAAqB,GAAF,OACtB3D,CACR,CAvHqC,GAwJtC,MAAaliB,UAA6B,EAAA11C,WAkCxCC,YACqB87D,EAAgC,EAAAP,wBAEnDp7D,QAFmB,KAAA27D,aAAAA,EATX,KAAA/kB,YAAiC,CACzCjoC,MAAO,EACPitD,SAAU,GACVC,WAAY,EACZC,WAAY,EACZC,SAAU,GAQV37D,KAAK47D,aAAe,EACpB57D,KAAK67D,aAAe77D,KAAK47D,aACzB57D,KAAKw6D,QAAU,IAAI,EAAAH,OACnBr6D,KAAKw6D,QAAQF,SAAS,GACtBt6D,KAAK87D,SAAW,EAChB97D,KAAKkgD,mBAAqB,EAG1BlgD,KAAK+7D,gBAAkB,CAACj6C,EAAM7f,EAAOC,KAAd,EACvBlC,KAAKg8D,kBAAqBzkB,IAAD,EACzBv3C,KAAKi8D,cAAgB,CAACtkD,EAAes/B,KAAhB,EACrBj3C,KAAKk8D,cAAiBvkD,IAAD,EACrB3X,KAAKm8D,gBAAmB5tD,GAAwCA,EAChEvO,KAAKo8D,cAAgBp8D,KAAK+7D,gBAC1B/7D,KAAKq8D,iBAAmBxtD,OAAOqqD,OAAO,MACtCl5D,KAAKs8D,aAAeztD,OAAOqqD,OAAO,MAClCl5D,KAAKu8D,aAAe1tD,OAAOqqD,OAAO,MAClCl5D,KAAK6B,UAAS,IAAAyB,eAAa,KACzBtD,KAAKs8D,aAAeztD,OAAOqqD,OAAO,MAClCl5D,KAAKq8D,iBAAmBxtD,OAAOqqD,OAAO,MACtCl5D,KAAKu8D,aAAe1tD,OAAOqqD,OAAO,KAAK,KAEzCl5D,KAAKw8D,WAAax8D,KAAK6B,SAAS,IAAI,EAAA46D,WACpCz8D,KAAK08D,WAAa18D,KAAK6B,SAAS,IAAI,EAAA86D,WACpC38D,KAAK48D,cAAgB58D,KAAKm8D,gBAG1Bn8D,KAAKiyC,mBAAmB,CAAEQ,MAAO,OAAQ,KAAM,GACjD,CAEUoqB,YAAY/+B,EAAyBg/B,EAAuB,CAAC,GAAM,MAC3E,IAAI3e,EAAM,EACV,GAAIrgB,EAAG6a,OAAQ,CACb,GAAI7a,EAAG6a,OAAOz3C,OAAS,EACrB,MAAM,IAAIS,MAAM,qCAGlB,GADAw8C,EAAMrgB,EAAG6a,OAAOt0B,WAAW,GACvB85B,GAAO,GAAOA,GAAOA,EAAM,GAC7B,MAAM,IAAIx8C,MAAM,uC,CAGpB,GAAIm8B,EAAGga,cAAe,CACpB,GAAIha,EAAGga,cAAc52C,OAAS,EAC5B,MAAM,IAAIS,MAAM,iDAElB,IAAK,IAAItC,EAAI,EAAGA,EAAIy+B,EAAGga,cAAc52C,SAAU7B,EAAG,CAChD,MAAM09D,EAAej/B,EAAGga,cAAczzB,WAAWhlB,GACjD,GAAI,GAAO09D,GAAgBA,EAAe,GACxC,MAAM,IAAIp7D,MAAM,8CAElBw8C,IAAQ,EACRA,GAAO4e,C,EAGX,GAAwB,IAApBj/B,EAAG2U,MAAMvxC,OACX,MAAM,IAAIS,MAAM,+BAElB,MAAMq7D,EAAYl/B,EAAG2U,MAAMpuB,WAAW,GACtC,GAAIy4C,EAAW,GAAKE,GAAaA,EAAYF,EAAW,GACtD,MAAM,IAAIn7D,MAAM,0BAA0Bm7D,EAAW,SAASA,EAAW,MAK3E,OAHA3e,IAAQ,EACRA,GAAO6e,EAEA7e,CACT,CAEOhH,cAAcx/B,GACnB,MAAMwmC,EAAgB,GACtB,KAAOxmC,GACLwmC,EAAI35C,KAAKwgB,OAAOC,aAAqB,IAARtN,IAC7BA,IAAU,EAEZ,OAAOwmC,EAAI8e,UAAUxjC,KAAK,GAC5B,CAEOke,gBAAgBruC,GACrBtJ,KAAKo8D,cAAgB9yD,CACvB,CACO4zD,oBACLl9D,KAAKo8D,cAAgBp8D,KAAK+7D,eAC5B,CAEO9pB,mBAAmBnU,EAAyBx0B,GACjD,MAAMqO,EAAQ3X,KAAK68D,YAAY/+B,EAAI,CAAC,GAAM,WACTtzB,IAA7BxK,KAAKu8D,aAAa5kD,KACpB3X,KAAKu8D,aAAa5kD,GAAS,IAE7B,MAAM+hD,EAAc15D,KAAKu8D,aAAa5kD,GAEtC,OADA+hD,EAAYl1D,KAAK8E,GACV,CACLG,QAAS,KACP,MAAMkwD,EAAeD,EAAY5uD,QAAQxB,IACnB,IAAlBqwD,GACFD,EAAY3uD,OAAO4uD,EAAc,E,EAIzC,CACOwD,gBAAgBr/B,GACjB99B,KAAKu8D,aAAav8D,KAAK68D,YAAY/+B,EAAI,CAAC,GAAM,eAAgB99B,KAAKu8D,aAAav8D,KAAK68D,YAAY/+B,EAAI,CAAC,GAAM,MAClH,CACOuZ,sBAAsB/tC,GAC3BtJ,KAAKk8D,cAAgB5yD,CACvB,CAEOwxC,kBAAkBwC,EAAch0C,GACrCtJ,KAAKq8D,iBAAiB/e,EAAKj5B,WAAW,IAAM/a,CAC9C,CACO8zD,oBAAoB9f,GACrBt9C,KAAKq8D,iBAAiB/e,EAAKj5B,WAAW,YAAYrkB,KAAKq8D,iBAAiB/e,EAAKj5B,WAAW,GAC9F,CACOizB,0BAA0BhuC,GAC/BtJ,KAAKg8D,kBAAoB1yD,CAC3B,CAEO6oC,mBAAmBrU,EAAyBx0B,GACjD,MAAMqO,EAAQ3X,KAAK68D,YAAY/+B,QACEtzB,IAA7BxK,KAAKs8D,aAAa3kD,KACpB3X,KAAKs8D,aAAa3kD,GAAS,IAE7B,MAAM+hD,EAAc15D,KAAKs8D,aAAa3kD,GAEtC,OADA+hD,EAAYl1D,KAAK8E,GACV,CACLG,QAAS,KACP,MAAMkwD,EAAeD,EAAY5uD,QAAQxB,IACnB,IAAlBqwD,GACFD,EAAY3uD,OAAO4uD,EAAc,E,EAIzC,CACO0D,gBAAgBv/B,GACjB99B,KAAKs8D,aAAat8D,KAAK68D,YAAY/+B,YAAa99B,KAAKs8D,aAAat8D,KAAK68D,YAAY/+B,GACzF,CACOkZ,sBAAsBvmC,GAC3BzQ,KAAKi8D,cAAgBxrD,CACvB,CAEOyhC,mBAAmBpU,EAAyBx0B,GACjD,OAAOtJ,KAAK08D,WAAWjD,gBAAgBz5D,KAAK68D,YAAY/+B,GAAKx0B,EAC/D,CACOg0D,gBAAgBx/B,GACrB99B,KAAK08D,WAAW9C,aAAa55D,KAAK68D,YAAY/+B,GAChD,CACO2Z,sBAAsBnuC,GAC3BtJ,KAAK08D,WAAW7C,mBAAmBvwD,EACrC,CAEO8oC,mBAAmBz6B,EAAerO,GACvC,OAAOtJ,KAAKw8D,WAAW/C,gBAAgB9hD,EAAOrO,EAChD,CACOi0D,gBAAgB5lD,GACrB3X,KAAKw8D,WAAW5C,aAAajiD,EAC/B,CACO6/B,sBAAsBluC,GAC3BtJ,KAAKw8D,WAAW3C,mBAAmBvwD,EACrC,CAEOo0C,gBAAgBjtC,GACrBzQ,KAAK48D,cAAgBnsD,CACvB,CACO+sD,oBACLx9D,KAAK48D,cAAgB58D,KAAKm8D,eAC5B,CAWOrlD,QACL9W,KAAK67D,aAAe77D,KAAK47D,aACzB57D,KAAKw8D,WAAW1lD,QAChB9W,KAAK08D,WAAW5lD,QAChB9W,KAAKw6D,QAAQ1jD,QACb9W,KAAKw6D,QAAQF,SAAS,GACtBt6D,KAAK87D,SAAW,EAChB97D,KAAKkgD,mBAAqB,EAIK,IAA3BlgD,KAAKw2C,YAAYjoC,QACnBvO,KAAKw2C,YAAYjoC,MAAQ,EACzBvO,KAAKw2C,YAAYglB,SAAW,GAEhC,CAKU1d,eACRvvC,EACAitD,EACAC,EACAC,EACAC,GAEA37D,KAAKw2C,YAAYjoC,MAAQA,EACzBvO,KAAKw2C,YAAYglB,SAAWA,EAC5Bx7D,KAAKw2C,YAAYilB,WAAaA,EAC9Bz7D,KAAKw2C,YAAYklB,WAAaA,EAC9B17D,KAAKw2C,YAAYmlB,SAAWA,CAC9B,CA2CO3qB,MAAMlvB,EAAmB5gB,EAAgB6vC,GAC9C,IAGIopB,EAHA5iB,EAAO,EACPmkB,EAAa,EACbz5D,EAAQ,EAIZ,GAAIjC,KAAKw2C,YAAYjoC,MAGnB,GAA+B,IAA3BvO,KAAKw2C,YAAYjoC,MACnBvO,KAAKw2C,YAAYjoC,MAAQ,EACzBtM,EAAQjC,KAAKw2C,YAAYmlB,SAAW,MAC/B,CACL,QAAsBnxD,IAAlBumC,GAA0D,IAA3B/wC,KAAKw2C,YAAYjoC,MAiBlD,MADAvO,KAAKw2C,YAAYjoC,MAAQ,EACnB,IAAI5M,MAAM,0EAMlB,MAAM65D,EAAWx7D,KAAKw2C,YAAYglB,SAClC,IAAIC,EAAaz7D,KAAKw2C,YAAYilB,WAAa,EAC/C,OAAQz7D,KAAKw2C,YAAYjoC,OACvB,KAAK,EACH,IAAsB,IAAlBwiC,GAA2B0qB,GAAc,EAC3C,KAAOA,GAAc,IACnBtB,EAAiBqB,EAA8BC,GAAYz7D,KAAKw6D,UAC1C,IAAlBL,GAFkBsB,IAIf,GAAItB,aAAyBlc,QAElC,OADAj+C,KAAKw2C,YAAYilB,WAAaA,EACvBtB,EAIbn6D,KAAKw2C,YAAYglB,SAAW,GAC5B,MACF,KAAK,EACH,IAAsB,IAAlBzqB,GAA2B0qB,GAAc,EAC3C,KAAOA,GAAc,IACnBtB,EAAiBqB,EAA8BC,MACzB,IAAlBtB,GAFkBsB,IAIf,GAAItB,aAAyBlc,QAElC,OADAj+C,KAAKw2C,YAAYilB,WAAaA,EACvBtB,EAIbn6D,KAAKw2C,YAAYglB,SAAW,GAC5B,MACF,KAAK,EAGH,GAFAjkB,EAAOz1B,EAAK9hB,KAAKw2C,YAAYmlB,UAC7BxB,EAAgBn6D,KAAK08D,WAAW5C,OAAgB,KAATviB,GAA0B,KAATA,EAAexG,GACnEopB,EACF,OAAOA,EAEI,KAAT5iB,IAAev3C,KAAKw2C,YAAYklB,YAAc,GAClD17D,KAAKw6D,QAAQ1jD,QACb9W,KAAKw6D,QAAQF,SAAS,GACtBt6D,KAAK87D,SAAW,EAChB,MACF,KAAK,EAGH,GAFAvkB,EAAOz1B,EAAK9hB,KAAKw2C,YAAYmlB,UAC7BxB,EAAgBn6D,KAAKw8D,WAAWt6D,IAAa,KAATq1C,GAA0B,KAATA,EAAexG,GAChEopB,EACF,OAAOA,EAEI,KAAT5iB,IAAev3C,KAAKw2C,YAAYklB,YAAc,GAClD17D,KAAKw6D,QAAQ1jD,QACb9W,KAAKw6D,QAAQF,SAAS,GACtBt6D,KAAK87D,SAAW,EAIpB97D,KAAKw2C,YAAYjoC,MAAQ,EACzBtM,EAAQjC,KAAKw2C,YAAYmlB,SAAW,EACpC37D,KAAKkgD,mBAAqB,EAC1BlgD,KAAK67D,aAA6C,GAA9B77D,KAAKw2C,YAAYklB,U,CAOzC,IAAK,IAAIr8D,EAAI4C,EAAO5C,EAAI6B,IAAU7B,EAAG,CAKnC,OAJAk4C,EAAOz1B,EAAKziB,GAGZq8D,EAAa17D,KAAKu7D,aAAanE,MAAMp3D,KAAK67D,cAAgB,GAAiCtkB,EAAO,IAAOA,EAAOwjB,IACxGW,GAAc,GACpB,KAAK,EAGH,IAAK,IAAI7tD,EAAIxO,EAAI,KAAOwO,EAAG,CACzB,GAAIA,GAAK3M,IAAWq2C,EAAOz1B,EAAKjU,IAAM,IAAS0pC,EAAO,KAAQA,EAAOwjB,EAAsB,CACzF/6D,KAAKo8D,cAAct6C,EAAMziB,EAAGwO,GAC5BxO,EAAIwO,EAAI,EACR,K,CAEF,KAAMA,GAAK3M,IAAWq2C,EAAOz1B,EAAKjU,IAAM,IAAS0pC,EAAO,KAAQA,EAAOwjB,EAAsB,CAC3F/6D,KAAKo8D,cAAct6C,EAAMziB,EAAGwO,GAC5BxO,EAAIwO,EAAI,EACR,K,CAEF,KAAMA,GAAK3M,IAAWq2C,EAAOz1B,EAAKjU,IAAM,IAAS0pC,EAAO,KAAQA,EAAOwjB,EAAsB,CAC3F/6D,KAAKo8D,cAAct6C,EAAMziB,EAAGwO,GAC5BxO,EAAIwO,EAAI,EACR,K,CAEF,KAAMA,GAAK3M,IAAWq2C,EAAOz1B,EAAKjU,IAAM,IAAS0pC,EAAO,KAAQA,EAAOwjB,EAAsB,CAC3F/6D,KAAKo8D,cAAct6C,EAAMziB,EAAGwO,GAC5BxO,EAAIwO,EAAI,EACR,K,EAGJ,MACF,KAAK,EACC7N,KAAKq8D,iBAAiB9kB,GAAOv3C,KAAKq8D,iBAAiB9kB,KAClDv3C,KAAKg8D,kBAAkBzkB,GAC5Bv3C,KAAKkgD,mBAAqB,EAC1B,MACF,KAAK,EACH,MACF,KAAK,EAUH,GAT8BlgD,KAAK48D,cACjC,CACEp5D,SAAUnE,EACVk4C,OACAskB,aAAc77D,KAAK67D,aACnB4B,QAASz9D,KAAK87D,SACd7kB,OAAQj3C,KAAKw6D,QACbkD,OAAO,IAEAA,MAAO,OAElB,MACF,KAAK,EAEH,MAAMlC,EAAWx7D,KAAKs8D,aAAat8D,KAAK87D,UAAY,EAAIvkB,GACxD,IAAI1pC,EAAI2tD,EAAWA,EAASt6D,OAAS,GAAK,EAC1C,KAAO2M,GAAK,IAGVssD,EAAgBqB,EAAS3tD,GAAG7N,KAAKw6D,UACX,IAAlBL,GAJStsD,IAMN,GAAIssD,aAAyBlc,QAElC,OADAj+C,KAAK89C,eAAe,EAAqB0d,EAAU3tD,EAAG6tD,EAAYr8D,GAC3D86D,EAGPtsD,EAAI,GACN7N,KAAKi8D,cAAcj8D,KAAK87D,UAAY,EAAIvkB,EAAMv3C,KAAKw6D,SAErDx6D,KAAKkgD,mBAAqB,EAC1B,MACF,KAAK,EAEH,GACE,OAAQ3I,GACN,KAAK,GACHv3C,KAAKw6D,QAAQF,SAAS,GACtB,MACF,KAAK,GACHt6D,KAAKw6D,QAAQmD,aAAa,GAC1B,MACF,QACE39D,KAAKw6D,QAAQoD,SAASrmB,EAAO,aAExBl4C,EAAI6B,IAAWq2C,EAAOz1B,EAAKziB,IAAM,IAAQk4C,EAAO,IAC3Dl4C,IACA,MACF,KAAK,EACHW,KAAK87D,WAAa,EAClB97D,KAAK87D,UAAYvkB,EACjB,MACF,KAAK,GACH,MAAMsmB,EAAc79D,KAAKu8D,aAAav8D,KAAK87D,UAAY,EAAIvkB,GAC3D,IAAIumB,EAAKD,EAAcA,EAAY38D,OAAS,GAAK,EACjD,KAAO48D,GAAM,IAGX3D,EAAgB0D,EAAYC,MACN,IAAlB3D,GAJU2D,IAMP,GAAI3D,aAAyBlc,QAElC,OADAj+C,KAAK89C,eAAe,EAAqB+f,EAAaC,EAAIpC,EAAYr8D,GAC/D86D,EAGP2D,EAAK,GACP99D,KAAKk8D,cAAcl8D,KAAK87D,UAAY,EAAIvkB,GAE1Cv3C,KAAKkgD,mBAAqB,EAC1B,MACF,KAAK,GACHlgD,KAAKw6D,QAAQ1jD,QACb9W,KAAKw6D,QAAQF,SAAS,GACtBt6D,KAAK87D,SAAW,EAChB,MACF,KAAK,GACH97D,KAAK08D,WAAW3C,KAAK/5D,KAAK87D,UAAY,EAAIvkB,EAAMv3C,KAAKw6D,SACrD,MACF,KAAK,GAGH,IAAK,IAAI3sD,EAAIxO,EAAI,KAAOwO,EACtB,GAAIA,GAAK3M,GAA+B,MAApBq2C,EAAOz1B,EAAKjU,KAAyB,KAAT0pC,GAA0B,KAATA,GAAkBA,EAAO,KAAQA,EAAOwjB,EAAsB,CAC7H/6D,KAAK08D,WAAW1C,IAAIl4C,EAAMziB,EAAGwO,GAC7BxO,EAAIwO,EAAI,EACR,K,CAGJ,MACF,KAAK,GAEH,GADAssD,EAAgBn6D,KAAK08D,WAAW5C,OAAgB,KAATviB,GAA0B,KAATA,GACpD4iB,EAEF,OADAn6D,KAAK89C,eAAe,EAAqB,GAAI,EAAG4d,EAAYr8D,GACrD86D,EAEI,KAAT5iB,IAAemkB,GAAc,GACjC17D,KAAKw6D,QAAQ1jD,QACb9W,KAAKw6D,QAAQF,SAAS,GACtBt6D,KAAK87D,SAAW,EAChB97D,KAAKkgD,mBAAqB,EAC1B,MACF,KAAK,EACHlgD,KAAKw8D,WAAWv6D,QAChB,MACF,KAAK,EAEH,IAAK,IAAI4L,EAAIxO,EAAI,GAAKwO,IACpB,GAAIA,GAAK3M,IAAWq2C,EAAOz1B,EAAKjU,IAAM,IAAS0pC,EAAO,KAAQA,EAAOwjB,EAAsB,CACzF/6D,KAAKw8D,WAAWxC,IAAIl4C,EAAMziB,EAAGwO,GAC7BxO,EAAIwO,EAAI,EACR,K,CAGJ,MACF,KAAK,EAEH,GADAssD,EAAgBn6D,KAAKw8D,WAAWt6D,IAAa,KAATq1C,GAA0B,KAATA,GACjD4iB,EAEF,OADAn6D,KAAK89C,eAAe,EAAqB,GAAI,EAAG4d,EAAYr8D,GACrD86D,EAEI,KAAT5iB,IAAemkB,GAAc,GACjC17D,KAAKw6D,QAAQ1jD,QACb9W,KAAKw6D,QAAQF,SAAS,GACtBt6D,KAAK87D,SAAW,EAChB97D,KAAKkgD,mBAAqB,EAG9BlgD,KAAK67D,aAA4B,GAAbH,C,CAExB,EAjjBF,wB,kGC/NA,gBACA,SAGM1C,EAAgC,GAEtC,gCACU,KAAA+E,OAAS,EACT,KAAA5E,QAAUH,EACV,KAAAxG,KAAO,EACP,KAAAyG,UAA6CpqD,OAAOqqD,OAAO,MAC3D,KAAAG,WAAqC,OACrC,KAAAC,OAA+B,CACrC7iB,QAAQ,EACR8iB,aAAc,EACdC,aAAa,EAwKjB,CArKSC,gBAAgB9hD,EAAerO,QACNkB,IAA1BxK,KAAKi5D,UAAUthD,KACjB3X,KAAKi5D,UAAUthD,GAAS,IAE1B,MAAM+hD,EAAc15D,KAAKi5D,UAAUthD,GAEnC,OADA+hD,EAAYl1D,KAAK8E,GACV,CACLG,QAAS,KACP,MAAMkwD,EAAeD,EAAY5uD,QAAQxB,IACnB,IAAlBqwD,GACFD,EAAY3uD,OAAO4uD,EAAc,E,EAIzC,CACOC,aAAajiD,GACd3X,KAAKi5D,UAAUthD,WAAe3X,KAAKi5D,UAAUthD,EACnD,CACOkiD,mBAAmBvwD,GACxBtJ,KAAKq5D,WAAa/vD,CACpB,CAEOG,UACLzJ,KAAKi5D,UAAYpqD,OAAOqqD,OAAO,MAC/Bl5D,KAAKq5D,WAAa,OAClBr5D,KAAKm5D,QAAUH,CACjB,CAEOliD,QAEL,GAAoB,IAAhB9W,KAAK+9D,OACP,IAAK,IAAIlwD,EAAI7N,KAAKs5D,OAAO7iB,OAASz2C,KAAKs5D,OAAOC,aAAe,EAAIv5D,KAAKm5D,QAAQj4D,OAAS,EAAG2M,GAAK,IAAKA,EAClG7N,KAAKm5D,QAAQtrD,GAAG3L,KAAI,GAGxBlC,KAAKs5D,OAAO7iB,QAAS,EACrBz2C,KAAKm5D,QAAUH,EACfh5D,KAAKwyD,KAAO,EACZxyD,KAAK+9D,OAAS,CAChB,CAEQ9W,SAEN,GADAjnD,KAAKm5D,QAAUn5D,KAAKi5D,UAAUj5D,KAAKwyD,MAAQwG,EACtCh5D,KAAKm5D,QAAQj4D,OAGhB,IAAK,IAAI2M,EAAI7N,KAAKm5D,QAAQj4D,OAAS,EAAG2M,GAAK,EAAGA,IAC5C7N,KAAKm5D,QAAQtrD,GAAG5L,aAHlBjC,KAAKq5D,WAAWr5D,KAAKwyD,IAAK,QAM9B,CAEQwL,KAAKl8C,EAAmB7f,EAAeC,GAC7C,GAAKlC,KAAKm5D,QAAQj4D,OAGhB,IAAK,IAAI2M,EAAI7N,KAAKm5D,QAAQj4D,OAAS,EAAG2M,GAAK,EAAGA,IAC5C7N,KAAKm5D,QAAQtrD,GAAGmsD,IAAIl4C,EAAM7f,EAAOC,QAHnClC,KAAKq5D,WAAWr5D,KAAKwyD,IAAK,OAAO,IAAAyH,eAAcn4C,EAAM7f,EAAOC,GAMhE,CAEOD,QAELjC,KAAK8W,QACL9W,KAAK+9D,OAAS,CAChB,CASO/D,IAAIl4C,EAAmB7f,EAAeC,GAC3C,GAAoB,IAAhBlC,KAAK+9D,OAAT,CAGA,GAAoB,IAAhB/9D,KAAK+9D,OACP,KAAO97D,EAAQC,GAAK,CAClB,MAAMq1C,EAAOz1B,EAAK7f,KAClB,GAAa,KAATs1C,EAAe,CACjBv3C,KAAK+9D,OAAS,EACd/9D,KAAKinD,SACL,K,CAEF,GAAI1P,EAAO,IAAQ,GAAOA,EAExB,YADAv3C,KAAK+9D,OAAS,IAGE,IAAd/9D,KAAKwyD,MACPxyD,KAAKwyD,IAAM,GAEbxyD,KAAKwyD,IAAiB,GAAXxyD,KAAKwyD,IAAWjb,EAAO,E,CAGlB,IAAhBv3C,KAAK+9D,QAA+B77D,EAAMD,EAAQ,GACpDjC,KAAKg+D,KAAKl8C,EAAM7f,EAAOC,E,CAE3B,CAOOA,IAAIg4D,EAAkBnpB,GAAyB,GACpD,GAAoB,IAAhB/wC,KAAK+9D,OAAT,CAIA,GAAoB,IAAhB/9D,KAAK+9D,OAQP,GAJoB,IAAhB/9D,KAAK+9D,QACP/9D,KAAKinD,SAGFjnD,KAAKm5D,QAAQj4D,OAEX,CACL,IAAIi5D,GAA4C,EAC5CtsD,EAAI7N,KAAKm5D,QAAQj4D,OAAS,EAC1Bs4D,GAAc,EAOlB,GANIx5D,KAAKs5D,OAAO7iB,SACd5oC,EAAI7N,KAAKs5D,OAAOC,aAAe,EAC/BY,EAAgBppB,EAChByoB,EAAcx5D,KAAKs5D,OAAOE,YAC1Bx5D,KAAKs5D,OAAO7iB,QAAS,IAElB+iB,IAAiC,IAAlBW,EAAyB,CAC3C,KAAOtsD,GAAK,IACVssD,EAAgBn6D,KAAKm5D,QAAQtrD,GAAG3L,IAAIg4D,IACd,IAAlBC,GAFStsD,IAIN,GAAIssD,aAAyBlc,QAIlC,OAHAj+C,KAAKs5D,OAAO7iB,QAAS,EACrBz2C,KAAKs5D,OAAOC,aAAe1rD,EAC3B7N,KAAKs5D,OAAOE,aAAc,EACnBW,EAGXtsD,G,CAKF,KAAOA,GAAK,EAAGA,IAEb,GADAssD,EAAgBn6D,KAAKm5D,QAAQtrD,GAAG3L,KAAI,GAChCi4D,aAAyBlc,QAI3B,OAHAj+C,KAAKs5D,OAAO7iB,QAAS,EACrBz2C,KAAKs5D,OAAOC,aAAe1rD,EAC3B7N,KAAKs5D,OAAOE,aAAc,EACnBW,C,MAlCXn6D,KAAKq5D,WAAWr5D,KAAKwyD,IAAK,MAAO0H,GAwCrCl6D,KAAKm5D,QAAUH,EACfh5D,KAAKwyD,KAAO,EACZxyD,KAAK+9D,OAAS,C,CAChB,GAOF,mBAIEt+D,YAAoB86D,GAAA,KAAAA,SAAAA,EAHZ,KAAA5U,MAAQ,GACR,KAAA8U,WAAqB,CAEiD,CAEvEx4D,QACLjC,KAAK2lD,MAAQ,GACb3lD,KAAKy6D,WAAY,CACnB,CAEOT,IAAIl4C,EAAmB7f,EAAeC,GACvClC,KAAKy6D,YAGTz6D,KAAK2lD,QAAS,IAAAsU,eAAcn4C,EAAM7f,EAAOC,GACrClC,KAAK2lD,MAAMzkD,OAAS,EAAA63D,gBACtB/4D,KAAK2lD,MAAQ,GACb3lD,KAAKy6D,WAAY,GAErB,CAEOv4D,IAAIg4D,GACT,IAAIQ,GAAkC,EACtC,GAAI16D,KAAKy6D,UACPC,GAAM,OACD,GAAIR,IACTQ,EAAM16D,KAAKu6D,SAASv6D,KAAK2lD,OACrB+U,aAAezc,SAGjB,OAAOyc,EAAIpC,MAAKna,IACdn+C,KAAK2lD,MAAQ,GACb3lD,KAAKy6D,WAAY,EACVtc,KAMb,OAFAn+C,KAAK2lD,MAAQ,GACb3lD,KAAKy6D,WAAY,EACVC,CACT,E,gFCrOF,MAAMuD,EAAY,WAuBlB,MAAa5D,EAyCX56D,YAAmBsrC,EAAoB,GAAWmzB,EAA6B,IAC7E,GADiB,KAAAnzB,UAAAA,EAA+B,KAAAmzB,mBAAAA,EAC5CA,EA/Dc,IAgEhB,MAAM,IAAIv8D,MAAM,mDAElB3B,KAAKi3C,OAAS,IAAIknB,WAAWpzB,GAC7B/qC,KAAKkB,OAAS,EACdlB,KAAKo+D,WAAa,IAAID,WAAWD,GACjCl+D,KAAKq+D,iBAAmB,EACxBr+D,KAAKs+D,cAAgB,IAAIC,YAAYxzB,GACrC/qC,KAAKw+D,eAAgB,EACrBx+D,KAAKy+D,kBAAmB,EACxBz+D,KAAK0+D,aAAc,CACrB,CAnCOt/B,iBAAiBqnB,GACtB,MAAMxP,EAAS,IAAIojB,EACnB,IAAK5T,EAAOvlD,OACV,OAAO+1C,EAGT,IAAK,IAAI53C,EAAKurC,MAAMoB,QAAQya,EAAO,IAAO,EAAI,EAAGpnD,EAAIonD,EAAOvlD,SAAU7B,EAAG,CACvE,MAAM6H,EAAQu/C,EAAOpnD,GACrB,GAAIurC,MAAMoB,QAAQ9kC,GAChB,IAAK,IAAIy3D,EAAI,EAAGA,EAAIz3D,EAAMhG,SAAUy9D,EAClC1nB,EAAO0mB,YAAYz2D,EAAMy3D,SAG3B1nB,EAAOqjB,SAASpzD,E,CAGpB,OAAO+vC,CACT,CAuBOrL,QACL,MAAMgzB,EAAY,IAAIvE,EAAOr6D,KAAK+qC,UAAW/qC,KAAKk+D,oBASlD,OARAU,EAAU3nB,OAAOruC,IAAI5I,KAAKi3C,QAC1B2nB,EAAU19D,OAASlB,KAAKkB,OACxB09D,EAAUR,WAAWx1D,IAAI5I,KAAKo+D,YAC9BQ,EAAUP,iBAAmBr+D,KAAKq+D,iBAClCO,EAAUN,cAAc11D,IAAI5I,KAAKs+D,eACjCM,EAAUJ,cAAgBx+D,KAAKw+D,cAC/BI,EAAUH,iBAAmBz+D,KAAKy+D,iBAClCG,EAAUF,YAAc1+D,KAAK0+D,YACtBE,CACT,CAQOxnB,UACL,MAAM+G,EAAmB,GACzB,IAAK,IAAI9+C,EAAI,EAAGA,EAAIW,KAAKkB,SAAU7B,EAAG,CACpC8+C,EAAI35C,KAAKxE,KAAKi3C,OAAO53C,IACrB,MAAM4C,EAAQjC,KAAKs+D,cAAcj/D,IAAM,EACjC6C,EAA8B,IAAxBlC,KAAKs+D,cAAcj/D,GAC3B6C,EAAMD,EAAQ,GAChBk8C,EAAI35C,KAAKomC,MAAM8T,UAAUvY,MAAM6M,KAAKhzC,KAAKo+D,WAAYn8D,EAAOC,G,CAGhE,OAAOi8C,CACT,CAKOrnC,QACL9W,KAAKkB,OAAS,EACdlB,KAAKq+D,iBAAmB,EACxBr+D,KAAKw+D,eAAgB,EACrBx+D,KAAKy+D,kBAAmB,EACxBz+D,KAAK0+D,aAAc,CACrB,CASOpE,SAASpzD,GAEd,GADAlH,KAAK0+D,aAAc,EACf1+D,KAAKkB,QAAUlB,KAAK+qC,UACtB/qC,KAAKw+D,eAAgB,MADvB,CAIA,GAAIt3D,GAAS,EACX,MAAM,IAAIvF,MAAM,yCAElB3B,KAAKs+D,cAAct+D,KAAKkB,QAAUlB,KAAKq+D,kBAAoB,EAAIr+D,KAAKq+D,iBACpEr+D,KAAKi3C,OAAOj3C,KAAKkB,UAAYgG,EAAQ+2D,EAAYA,EAAY/2D,C,CAC/D,CASOy2D,YAAYz2D,GAEjB,GADAlH,KAAK0+D,aAAc,EACd1+D,KAAKkB,OAGV,GAAIlB,KAAKw+D,eAAiBx+D,KAAKq+D,kBAAoBr+D,KAAKk+D,mBACtDl+D,KAAKy+D,kBAAmB,MAD1B,CAIA,GAAIv3D,GAAS,EACX,MAAM,IAAIvF,MAAM,yCAElB3B,KAAKo+D,WAAWp+D,KAAKq+D,oBAAsBn3D,EAAQ+2D,EAAYA,EAAY/2D,EAC3ElH,KAAKs+D,cAAct+D,KAAKkB,OAAS,I,CACnC,CAKOkiD,aAAaiB,GAClB,OAAmC,IAA1BrkD,KAAKs+D,cAAcja,KAAgBrkD,KAAKs+D,cAAcja,IAAQ,GAAK,CAC9E,CAOOf,aAAae,GAClB,MAAMpiD,EAAQjC,KAAKs+D,cAAcja,IAAQ,EACnCniD,EAAgC,IAA1BlC,KAAKs+D,cAAcja,GAC/B,OAAIniD,EAAMD,EAAQ,EACTjC,KAAKo+D,WAAW9iC,SAASr5B,EAAOC,GAElC,IACT,CAMO28D,kBACL,MAAMluD,EAAsC,CAAC,EAC7C,IAAK,IAAItR,EAAI,EAAGA,EAAIW,KAAKkB,SAAU7B,EAAG,CACpC,MAAM4C,EAAQjC,KAAKs+D,cAAcj/D,IAAM,EACjC6C,EAA8B,IAAxBlC,KAAKs+D,cAAcj/D,GAC3B6C,EAAMD,EAAQ,IAChB0O,EAAOtR,GAAKW,KAAKo+D,WAAWj4B,MAAMlkC,EAAOC,G,CAG7C,OAAOyO,CACT,CAMOitD,SAAS12D,GACd,IAAIhG,EACJ,GAAIlB,KAAKw+D,iBACFt9D,EAASlB,KAAK0+D,YAAc1+D,KAAKq+D,iBAAmBr+D,KAAKkB,SAC1DlB,KAAK0+D,aAAe1+D,KAAKy+D,iBAE7B,OAGF,MAAMK,EAAQ9+D,KAAK0+D,YAAc1+D,KAAKo+D,WAAap+D,KAAKi3C,OAClD8nB,EAAMD,EAAM59D,EAAS,GAC3B49D,EAAM59D,EAAS,IAAM69D,EAAMtrD,KAAKC,IAAU,GAANqrD,EAAW73D,EAAO+2D,GAAa/2D,CACrE,EArMF,U,sFCjBA,qBAGEzH,cAFU,KAAAu/D,QAA0B,EAGpC,CAEOv1D,UACL,IAAK,IAAIpK,EAAIW,KAAKg/D,QAAQ99D,OAAS,EAAG7B,GAAK,EAAGA,IAC5CW,KAAKg/D,QAAQ3/D,GAAG4/D,SAASx1D,SAE7B,CAEOy1D,UAAUC,EAAoBF,GACnC,MAAMG,EAA4B,CAChCH,WACAx1D,QAASw1D,EAASx1D,QAClB8oD,YAAY,GAEdvyD,KAAKg/D,QAAQx6D,KAAK46D,GAClBH,EAASx1D,QAAU,IAAMzJ,KAAKq/D,qBAAqBD,GACnDH,EAAS/wD,SAASixD,EACpB,CAEQE,qBAAqBD,GAC3B,GAAIA,EAAY7M,WAEd,OAEF,IAAI5kD,GAAS,EACb,IAAK,IAAItO,EAAI,EAAGA,EAAIW,KAAKg/D,QAAQ99D,OAAQ7B,IACvC,GAAIW,KAAKg/D,QAAQ3/D,KAAO+/D,EAAa,CACnCzxD,EAAQtO,EACR,K,CAGJ,IAAe,IAAXsO,EACF,MAAM,IAAIhM,MAAM,uDAElBy9D,EAAY7M,YAAa,EACzB6M,EAAY31D,QAAQyxD,MAAMkE,EAAYH,UACtCj/D,KAAKg/D,QAAQj0D,OAAO4C,EAAO,EAC7B,E,yFC/CF,gBACA,SAEA,sBACElO,YACUqvD,EACQzlD,GADR,KAAAylD,QAAAA,EACQ,KAAAzlD,KAAAA,CACd,CAEGi2D,KAAKz7D,GAEV,OADA7D,KAAK8uD,QAAUjrD,EACR7D,IACT,CAEW0Z,cAAoB,OAAO1Z,KAAK8uD,QAAQhjD,CAAG,CAC3C+N,cAAoB,OAAO7Z,KAAK8uD,QAAQjjD,CAAG,CAC3C0zD,gBAAsB,OAAOv/D,KAAK8uD,QAAQjpD,KAAO,CACjD25D,YAAkB,OAAOx/D,KAAK8uD,QAAQn1C,KAAO,CAC7CzY,aAAmB,OAAOlB,KAAK8uD,QAAQhrD,MAAM5C,MAAQ,CACzDu+D,QAAQ3zD,GACb,MAAM4E,EAAO1Q,KAAK8uD,QAAQhrD,MAAMgF,IAAIgD,GACpC,GAAK4E,EAGL,OAAO,IAAI,EAAAgvD,kBAAkBhvD,EAC/B,CACOqvC,cAAgC,OAAO,IAAI,EAAAjvC,QAAY,E,6FC5BhE,eAIA,0BACErR,YAAoBkgE,GAAA,KAAAA,MAAAA,CAAsB,CAE/B3tC,gBAAuB,OAAOhyB,KAAK2/D,MAAM3tC,SAAW,CACpD9wB,aAAmB,OAAOlB,KAAK2/D,MAAMz+D,MAAQ,CACjD0+D,QAAQ/zD,EAAW1F,GACxB,KAAI0F,EAAI,GAAKA,GAAK7L,KAAK2/D,MAAMz+D,QAI7B,OAAIiF,GACFnG,KAAK2/D,MAAMtuD,SAASxF,EAAG1F,GAChBA,GAEFnG,KAAK2/D,MAAMtuD,SAASxF,EAAG,IAAI,EAAAiF,SACpC,CACO2nB,kBAAkB01B,EAAqB0R,EAAsBC,GAClE,OAAO9/D,KAAK2/D,MAAMlnC,kBAAkB01B,EAAW0R,EAAaC,EAC9D,E,8FCrBF,gBACA,UAGA,2BAOErgE,YAAoBsgE,GAAA,KAAAA,MAAAA,EAHH,KAAAC,gBAAkB,IAAI,EAAA/1D,aACvB,KAAAg2D,eAAiBjgE,KAAKggE,gBAAgB71D,MAGpDnK,KAAK8xD,QAAU,IAAI,EAAAoO,cAAclgE,KAAK+/D,MAAMpnD,QAAQuV,OAAQ,UAC5DluB,KAAKmgE,WAAa,IAAI,EAAAD,cAAclgE,KAAK+/D,MAAMpnD,QAAQ+H,IAAK,aAC5D1gB,KAAK+/D,MAAMpnD,QAAQoP,kBAAiB,IAAM/nB,KAAKggE,gBAAgBxwD,KAAKxP,KAAK4Y,SAC3E,CACWA,aACT,GAAI5Y,KAAK+/D,MAAMpnD,QAAQC,SAAW5Y,KAAK+/D,MAAMpnD,QAAQuV,OAAU,OAAOluB,KAAKkuB,OAC3E,GAAIluB,KAAK+/D,MAAMpnD,QAAQC,SAAW5Y,KAAK+/D,MAAMpnD,QAAQ+H,IAAO,OAAO1gB,KAAKogE,UACxE,MAAM,IAAIz+D,MAAM,gDAClB,CACWusB,aACT,OAAOluB,KAAK8xD,QAAQwN,KAAKt/D,KAAK+/D,MAAMpnD,QAAQuV,OAC9C,CACWkyC,gBACT,OAAOpgE,KAAKmgE,WAAWb,KAAKt/D,KAAK+/D,MAAMpnD,QAAQ+H,IACjD,E,mFCvBF,kBACEjhB,YAAoBsgE,GAAA,KAAAA,MAAAA,CAAwB,CAErC5tB,mBAAmBrU,EAAyBrtB,GACjD,OAAOzQ,KAAK+/D,MAAM5tB,mBAAmBrU,GAAKmZ,GAAoBxmC,EAASwmC,EAAOG,YAChF,CACOipB,cAAcviC,EAAyBrtB,GAC5C,OAAOzQ,KAAKmyC,mBAAmBrU,EAAIrtB,EACrC,CACOyhC,mBAAmBpU,EAAyBrtB,GACjD,OAAOzQ,KAAK+/D,MAAM7tB,mBAAmBpU,GAAI,CAAChc,EAAcm1B,IAAoBxmC,EAASqR,EAAMm1B,EAAOG,YACpG,CACOkpB,cAAcxiC,EAAyBrtB,GAC5C,OAAOzQ,KAAKkyC,mBAAmBpU,EAAIrtB,EACrC,CACOwhC,mBAAmBnU,EAAyBx0B,GACjD,OAAOtJ,KAAK+/D,MAAM9tB,mBAAmBnU,EAAIx0B,EAC3C,CACOi3D,cAAcziC,EAAyBx0B,GAC5C,OAAOtJ,KAAKiyC,mBAAmBnU,EAAIx0B,EACrC,CACO8oC,mBAAmBz6B,EAAelH,GACvC,OAAOzQ,KAAK+/D,MAAM3tB,mBAAmBz6B,EAAOlH,EAC9C,CACO+vD,cAAc7oD,EAAelH,GAClC,OAAOzQ,KAAKoyC,mBAAmBz6B,EAAOlH,EACxC,E,oFC3BF,mBACEhR,YAAoBsgE,GAAA,KAAAA,MAAAA,CAAwB,CAErCl+D,SAAS4+D,GACdzgE,KAAK+/D,MAAM/vB,eAAenuC,SAAS4+D,EACrC,CAEWC,eACT,OAAO1gE,KAAK+/D,MAAM/vB,eAAe0wB,QACnC,CAEWC,oBACT,OAAO3gE,KAAK+/D,MAAM/vB,eAAe2wB,aACnC,CAEWA,kBAActJ,GACvBr3D,KAAK+/D,MAAM/vB,eAAe2wB,cAAgBtJ,CAC5C,E,iiBCpBF,gBACA,UAEA,UACA,SAGa,EAAA5lB,aAAe,EACf,EAAAC,aAAe,EAE5B,IAAahC,EAAb,cAAmC,EAAAlwC,WAmBjCC,YAA6B2f,GAC3Bxf,QAbK,KAAAghE,iBAA2B,EAEjB,KAAAvxB,UAAYrvC,KAAK6B,SAAS,IAAI,EAAAoI,cAC/B,KAAAnI,SAAW9B,KAAKqvC,UAAUllC,MACzB,KAAAyU,UAAY5e,KAAK6B,SAAS,IAAI,EAAAoI,cAC/B,KAAA9H,SAAWnC,KAAK4e,UAAUzU,MASxCnK,KAAKyN,KAAOgG,KAAKG,IAAIwL,EAAevO,WAAWpD,MAAQ,EAAG,EAAAgkC,cAC1DzxC,KAAKU,KAAO+S,KAAKG,IAAIwL,EAAevO,WAAWnQ,MAAQ,EAAG,EAAAgxC,cAC1D1xC,KAAK2Y,QAAU3Y,KAAK6B,SAAS,IAAI,EAAA+vD,UAAUxyC,EAAgBpf,MAC7D,CAVW6D,aAAoB,OAAO7D,KAAK2Y,QAAQC,MAAQ,CAYpDuE,OAAO1P,EAAc/M,GAC1BV,KAAKyN,KAAOA,EACZzN,KAAKU,KAAOA,EACZV,KAAK2Y,QAAQwE,OAAO1P,EAAM/M,GAE1BV,KAAKqvC,UAAU7/B,KAAK,CAAE/B,OAAM/M,QAC9B,CAEOoW,QACL9W,KAAK2Y,QAAQ7B,QACb9W,KAAK4gE,iBAAkB,CACzB,CAOOjvB,OAAOC,EAA2B5f,GAAqB,GAC5D,MAAMnuB,EAAS7D,KAAK6D,OAEpB,IAAIgpD,EACJA,EAAU7sD,KAAK6gE,iBACVhU,GAAWA,EAAQ3rD,SAAWlB,KAAKyN,MAAQo/C,EAAQxuB,MAAM,KAAOuT,EAAUjpC,IAAMkkD,EAAQtuB,MAAM,KAAOqT,EAAUlpC,KAClHmkD,EAAUhpD,EAAOyhB,aAAassB,EAAW5f,GACzChyB,KAAK6gE,iBAAmBhU,GAE1BA,EAAQ76B,UAAYA,EAEpB,MAAM8uC,EAASj9D,EAAO8V,MAAQ9V,EAAOglB,UAC/Bk4C,EAAYl9D,EAAO8V,MAAQ9V,EAAOgtC,aAExC,GAAyB,IAArBhtC,EAAOglB,UAAiB,CAE1B,MAAMm4C,EAAsBn9D,EAAOC,MAAMunC,OAGrC01B,IAAcl9D,EAAOC,MAAM5C,OAAS,EAClC8/D,EACFn9D,EAAOC,MAAMsnC,UAAU8kB,SAASrD,GAEhChpD,EAAOC,MAAMU,KAAKqoD,EAAQjhB,SAG5B/nC,EAAOC,MAAMiH,OAAOg2D,EAAY,EAAG,EAAGlU,EAAQjhB,SAI3Co1B,EASChhE,KAAK4gE,kBACP/8D,EAAOgC,MAAQ4N,KAAKG,IAAI/P,EAAOgC,MAAQ,EAAG,KAT5ChC,EAAO8V,QAEF3Z,KAAK4gE,iBACR/8D,EAAOgC,Q,KASN,CAGL,MAAMq/C,EAAqB6b,EAAYD,EAAS,EAChDj9D,EAAOC,MAAM4nC,cAAco1B,EAAS,EAAG5b,EAAqB,GAAI,GAChErhD,EAAOC,MAAM8E,IAAIm4D,EAAWlU,EAAQjhB,Q,CAKjC5rC,KAAK4gE,kBACR/8D,EAAOgC,MAAQhC,EAAO8V,OAGxB3Z,KAAK4e,UAAUpP,KAAK3L,EAAOgC,MAC7B,CASOpB,YAAY6d,EAAc/D,EAA+BgE,GAC9D,MAAM1e,EAAS7D,KAAK6D,OACpB,GAAIye,EAAO,EAAG,CACZ,GAAqB,IAAjBze,EAAOgC,MACT,OAEF7F,KAAK4gE,iBAAkB,C,MACdt+C,EAAOze,EAAOgC,OAAShC,EAAO8V,QACvC3Z,KAAK4gE,iBAAkB,GAGzB,MAAMK,EAAWp9D,EAAOgC,MACxBhC,EAAOgC,MAAQ4N,KAAKG,IAAIH,KAAKC,IAAI7P,EAAOgC,MAAQyc,EAAMze,EAAO8V,OAAQ,GAGjEsnD,IAAap9D,EAAOgC,QAInB0Y,GACHve,KAAK4e,UAAUpP,KAAK3L,EAAOgC,OAE/B,CAMOgsC,YAAYC,GACjB9xC,KAAKyE,YAAYqtC,GAAa9xC,KAAKU,KAAO,GAC5C,CAKOqxC,cACL/xC,KAAKyE,aAAazE,KAAK6D,OAAOgC,MAChC,CAKOme,iBACLhkB,KAAKyE,YAAYzE,KAAK6D,OAAO8V,MAAQ3Z,KAAK6D,OAAOgC,MACnD,CAEOmsC,aAAathC,GAClB,MAAMwwD,EAAexwD,EAAO1Q,KAAK6D,OAAOgC,MACnB,IAAjBq7D,GACFlhE,KAAKyE,YAAYy8D,EAErB,GAlKWxxB,EAAa,GAmBX,MAAAh9B,kBAnBFg9B,GAAA,EAAAA,cAAAA,C,wFCPb,qCAIS,KAAAyxB,OAAiB,EAEhB,KAAAC,UAAsC,EAmBhD,CAjBStqD,QACL9W,KAAKg/C,aAAUx0C,EACfxK,KAAKohE,UAAY,GACjBphE,KAAKmhE,OAAS,CAChB,CAEO/jB,UAAU3V,GACfznC,KAAKmhE,OAAS15B,EACdznC,KAAKg/C,QAAUh/C,KAAKohE,UAAU35B,EAChC,CAEOoa,YAAYpa,EAAWuX,GAC5Bh/C,KAAKohE,UAAU35B,GAAKuX,EAChBh/C,KAAKmhE,SAAW15B,IAClBznC,KAAKg/C,QAAUA,EAEnB,E,ugBC5BF,gBACA,UAEA,SAKMqiB,EAA2D,CAM/DC,KAAM,CACJjgD,OAAQ,EACRkgD,SAAU,KAAM,GAOlBC,IAAK,CACHngD,OAAQ,EACRkgD,SAAWzgE,GAEQ,IAAbA,EAAE8Z,QAAiD,IAAb9Z,EAAEkf,SAI5Clf,EAAE0f,MAAO,EACT1f,EAAE4f,KAAM,EACR5f,EAAEsD,OAAQ,GACH,IAQXq9D,MAAO,CACLpgD,OAAQ,GACRkgD,SAAWzgE,GAEQ,KAAbA,EAAEkf,QAWV0hD,KAAM,CACJrgD,OAAQ,GACRkgD,SAAWzgE,GAEQ,KAAbA,EAAEkf,QAAgD,IAAblf,EAAE8Z,QAW/C+mD,IAAK,CACHtgD,OACE,GAEFkgD,SAAWzgE,IAAuB,IAWtC,SAAS8gE,EAAU9gE,EAAoB+gE,GACrC,IAAItqB,GAAQz2C,EAAE0f,KAAO,GAAiB,IAAM1f,EAAEsD,MAAQ,EAAkB,IAAMtD,EAAE4f,IAAM,EAAgB,GAoBtG,OAnBiB,IAAb5f,EAAE8Z,QACJ28B,GAAQ,GACRA,GAAQz2C,EAAEkf,SAEVu3B,GAAmB,EAAXz2C,EAAE8Z,OACK,EAAX9Z,EAAE8Z,SACJ28B,GAAQ,IAEK,EAAXz2C,EAAE8Z,SACJ28B,GAAQ,KAEO,KAAbz2C,EAAEkf,OACJu3B,GAAQ,GACc,IAAbz2C,EAAEkf,QAAkC6hD,IAG7CtqB,GAAQ,IAGLA,CACT,CAEA,MAAMuqB,EAAI98C,OAAOC,aAKX88C,EAA0D,CAM9DC,QAAUlhE,IACR,MAAMm2C,EAAS,CAAC2qB,EAAU9gE,GAAG,GAAS,GAAIA,EAAEwf,IAAM,GAAIxf,EAAEyf,IAAM,IAK9D,OAAI02B,EAAO,GAAK,KAAOA,EAAO,GAAK,KAAOA,EAAO,GAAK,IAC7C,GAEF,MAAS6qB,EAAE7qB,EAAO,MAAM6qB,EAAE7qB,EAAO,MAAM6qB,EAAE7qB,EAAO,KAAK,EAO9DgrB,IAAMnhE,IACJ,MAAM2xC,EAAsB,IAAb3xC,EAAEkf,QAA8C,IAAblf,EAAE8Z,OAAoC,IAAM,IAC9F,MAAO,MAASgnD,EAAU9gE,GAAG,MAASA,EAAEwf,OAAOxf,EAAEyf,MAAMkyB,GAAO,EAEhEyvB,WAAaphE,IACX,MAAM2xC,EAAsB,IAAb3xC,EAAEkf,QAA8C,IAAblf,EAAE8Z,OAAoC,IAAM,IAC9F,MAAO,MAASgnD,EAAU9gE,GAAG,MAASA,EAAE+K,KAAK/K,EAAEgL,IAAI2mC,GAAO,GAoB9D,IAAa3C,EAAb,cAAsC,EAAAtwC,WAUpCC,YACmCkK,EACF2lB,GAE/B1vB,QAHiC,KAAA+J,eAAAA,EACF,KAAA2lB,aAAAA,EAXzB,KAAA6yC,WAAqD,CAAC,EACtD,KAAAC,WAAoD,CAAC,EACrD,KAAAC,gBAA0B,GAC1B,KAAAC,gBAA0B,GAC1B,KAAAC,WAAqC,KAE5B,KAAAC,kBAAoBxiE,KAAK6B,SAAS,IAAI,EAAAoI,cACvC,KAAAmX,iBAAoBphB,KAAKwiE,kBAAkBr4D,MAQzD,IAAK,MAAMs4D,KAAQ5zD,OAAOmhD,KAAKqR,GAAoBrhE,KAAK0iE,YAAYD,EAAMpB,EAAkBoB,IAC5F,IAAK,MAAMA,KAAQ5zD,OAAOmhD,KAAK+R,GAAoB/hE,KAAK2iE,YAAYF,EAAMV,EAAkBU,IAE5FziE,KAAK8W,OACP,CAEO4rD,YAAYD,EAAczwD,GAC/BhS,KAAKmiE,WAAWM,GAAQzwD,CAC1B,CAEO2wD,YAAYF,EAAcG,GAC/B5iE,KAAKoiE,WAAWK,GAAQG,CAC1B,CAEWnhD,qBACT,OAAOzhB,KAAKqiE,eACd,CAEWrjD,2BACT,OAAwD,IAAjDhf,KAAKmiE,WAAWniE,KAAKqiE,iBAAiBhhD,MAC/C,CAEWI,mBAAeghD,GACxB,IAAKziE,KAAKmiE,WAAWM,GACnB,MAAM,IAAI9gE,MAAM,qBAAqB8gE,MAEvCziE,KAAKqiE,gBAAkBI,EACvBziE,KAAKwiE,kBAAkBhzD,KAAKxP,KAAKmiE,WAAWM,GAAMphD,OACpD,CAEW2gC,qBACT,OAAOhiD,KAAKsiE,eACd,CAEWtgB,mBAAeygB,GACxB,IAAKziE,KAAKoiE,WAAWK,GACnB,MAAM,IAAI9gE,MAAM,qBAAqB8gE,MAEvCziE,KAAKsiE,gBAAkBG,CACzB,CAEO3rD,QACL9W,KAAKyhB,eAAiB,OACtBzhB,KAAKgiD,eAAiB,UACtBhiD,KAAKuiE,WAAa,IACpB,CAYOliD,kBAAkBvf,GAEvB,GAAIA,EAAEwf,IAAM,GAAKxf,EAAEwf,KAAOtgB,KAAK2J,eAAe8D,MACzC3M,EAAEyf,IAAM,GAAKzf,EAAEyf,KAAOvgB,KAAK2J,eAAejJ,KAC7C,OAAO,EAIT,GAAiB,IAAbI,EAAE8Z,QAAiD,KAAb9Z,EAAEkf,OAC1C,OAAO,EAET,GAAiB,IAAblf,EAAE8Z,QAAgD,KAAb9Z,EAAEkf,OACzC,OAAO,EAET,GAAiB,IAAblf,EAAE8Z,SAAkD,IAAb9Z,EAAEkf,QAAgD,IAAblf,EAAEkf,QAChF,OAAO,EAQT,GAJAlf,EAAEwf,MACFxf,EAAEyf,MAGe,KAAbzf,EAAEkf,QACDhgB,KAAKuiE,YACLviE,KAAK6iE,aAAa7iE,KAAKuiE,WAAYzhE,EAA4B,eAAzBd,KAAKsiE,iBAE9C,OAAO,EAIT,IAAKtiE,KAAKmiE,WAAWniE,KAAKqiE,iBAAiBd,SAASzgE,GAClD,OAAO,EAIT,MAAMgiE,EAAS9iE,KAAKoiE,WAAWpiE,KAAKsiE,iBAAiBxhE,GAYrD,OAXIgiE,IAE2B,YAAzB9iE,KAAKsiE,gBACPtiE,KAAKsvB,aAAayzC,mBAAmBD,GAErC9iE,KAAKsvB,aAAaroB,iBAAiB67D,GAAQ,IAI/C9iE,KAAKuiE,WAAazhE,GAEX,CACT,CAEOygB,cAAcF,GACnB,MAAO,CACL2hD,QAAkB,EAAT3hD,GACT4hD,MAAgB,EAAT5hD,GACP6hD,QAAkB,EAAT7hD,GACT8hD,QAAkB,EAAT9hD,GACTN,SAAmB,GAATM,GAEd,CAEQwhD,aAAaO,EAAqBC,EAAqBC,GAC7D,GAAIA,EAAQ,CACV,GAAIF,EAAGv3D,IAAMw3D,EAAGx3D,EAAG,OAAO,EAC1B,GAAIu3D,EAAGt3D,IAAMu3D,EAAGv3D,EAAG,OAAO,C,KACrB,CACL,GAAIs3D,EAAG9iD,MAAQ+iD,EAAG/iD,IAAK,OAAO,EAC9B,GAAI8iD,EAAG7iD,MAAQ8iD,EAAG9iD,IAAK,OAAO,C,CAEhC,OAAI6iD,EAAGxoD,SAAWyoD,EAAGzoD,QACjBwoD,EAAGpjD,SAAWqjD,EAAGrjD,QACjBojD,EAAG5iD,OAAS6iD,EAAG7iD,MACf4iD,EAAG1iD,MAAQ2iD,EAAG3iD,KACd0iD,EAAGh/D,QAAUi/D,EAAGj/D,KAEtB,GApJW0rC,EAAgB,GAWxB,MAAA1/B,gBACA,MAAAogB,eAZQsf,GAAA,EAAAA,iBAAAA,C,kgBCnKb,gBACA,UAEA,UACA,SAEMyzB,EAAwB10D,OAAO04B,OAAO,CAC1C4X,YAAY,IAGRqkB,EAA8C30D,OAAO04B,OAAO,CAChE1lB,uBAAuB,EACvBkgC,mBAAmB,EACnBn7C,oBAAoB,EACpB+gB,QAAQ,EACRy4B,mBAAmB,EACnBnnC,WAAW,EACXimC,YAAY,IAGd,IAAarP,EAAb,cAAiC,EAAArwC,WAiB/BC,YACmCkK,EACH+R,EACInL,GAElC3Q,QAJiC,KAAA+J,eAAAA,EACH,KAAA+R,YAAAA,EACI,KAAAnL,gBAAAA,EAjB7B,KAAA8R,qBAA+B,EAC/B,KAAAsW,gBAA0B,EAIhB,KAAAuW,QAAUlvC,KAAK6B,SAAS,IAAI,EAAAoI,cAC7B,KAAAklC,OAASnvC,KAAKkvC,QAAQ/kC,MACrB,KAAAs5D,aAAezjE,KAAK6B,SAAS,IAAI,EAAAoI,cAClC,KAAAy4B,YAAc1iC,KAAKyjE,aAAat5D,MAC/B,KAAA6kC,UAAYhvC,KAAK6B,SAAS,IAAI,EAAAoI,cAC/B,KAAAglC,SAAWjvC,KAAKgvC,UAAU7kC,MACzB,KAAAu5D,yBAA2B1jE,KAAK6B,SAAS,IAAI,EAAAoI,cAC9C,KAAAumC,wBAA0BxwC,KAAK0jE,yBAAyBv5D,MAQtEnK,KAAKo/C,OAAQ,IAAAxT,OAAM23B,GACnBvjE,KAAKgH,iBAAkB,IAAA4kC,OAAM43B,EAC/B,CAEO1sD,QACL9W,KAAKo/C,OAAQ,IAAAxT,OAAM23B,GACnBvjE,KAAKgH,iBAAkB,IAAA4kC,OAAM43B,EAC/B,CAEOv8D,iBAAiB6a,EAAc6hD,GAAwB,GAE5D,GAAI3jE,KAAKuQ,gBAAgBM,WAAW+yD,aAClC,OAIF,MAAM//D,EAAS7D,KAAK2J,eAAe9F,OAC/B8/D,GAAgB3jE,KAAKuQ,gBAAgBM,WAAWkT,mBAAqBlgB,EAAO8V,QAAU9V,EAAOgC,OAC/F7F,KAAK0jE,yBAAyBl0D,OAI5Bm0D,GACF3jE,KAAKyjE,aAAaj0D,OAIpBxP,KAAK0b,YAAYC,MAAM,iBAAiBmG,MAAS,IAAMA,EAAK68B,MAAM,IAAI5xC,KAAIjM,GAAKA,EAAEujB,WAAW,OAC5FrkB,KAAKkvC,QAAQ1/B,KAAKsS,EACpB,CAEOihD,mBAAmBjhD,GACpB9hB,KAAKuQ,gBAAgBM,WAAW+yD,eAGpC5jE,KAAK0b,YAAYC,MAAM,mBAAmBmG,MAAS,IAAMA,EAAK68B,MAAM,IAAI5xC,KAAIjM,GAAKA,EAAEujB,WAAW,OAC9FrkB,KAAKgvC,UAAUx/B,KAAKsS,GACtB,GA5DW+tB,EAAW,GAkBnB,MAAAz/B,gBACA,MAAAw/B,aACA,MAAAl9B,kBApBQm9B,GAAA,EAAAA,YAAAA,C,6FCpBb,gBACA,UACA,SAEA,UAKA,IAAIg0B,EAAQ,EACRC,EAAQ,EAEZ,MAAaztD,UAA0B,EAAA7W,WAiBrCC,cACEG,QAVe,KAAAmkE,aAAgD,IAAI,EAAAC,YAAWljE,GAAKA,aAAC,EAADA,EAAGyqB,OAAO7a,OAE9E,KAAAuzD,wBAA0BjkE,KAAK6B,SAAS,IAAI,EAAAoI,cAC7C,KAAA8gB,uBAAyB/qB,KAAKikE,wBAAwB95D,MACrD,KAAA+5D,qBAAuBlkE,KAAK6B,SAAS,IAAI,EAAAoI,cAC1C,KAAA+gB,oBAAsBhrB,KAAKkkE,qBAAqB/5D,MAO9DnK,KAAK6B,UAAS,IAAAyB,eAAa,KACzB,IAAK,MAAMm3B,KAAKz6B,KAAK+jE,aAAatd,SAChCzmD,KAAKkkE,qBAAqB10D,KAAKirB,GAEjCz6B,KAAK8W,OAAO,IAEhB,CAXWtI,kBAAuD,OAAOxO,KAAK+jE,aAAatd,QAAU,CAa9FxjC,mBAAmB1Z,GACxB,GAAIA,EAAQgiB,OAAOgnC,WACjB,OAEF,MAAMtnC,EAAa,IAAIk5C,EAAW56D,GAClC,GAAI0hB,EAAY,CACd,MAAMm5C,EAAgBn5C,EAAWM,OAAOijC,WAAU,IAAMvjC,EAAWxhB,YACnEwhB,EAAWujC,WAAU,KACfvjC,IACEjrB,KAAK+jE,aAAan4C,OAAOX,IAC3BjrB,KAAKkkE,qBAAqB10D,KAAKyb,GAEjCm5C,EAAc36D,U,IAGlBzJ,KAAK+jE,aAAazd,OAAOr7B,GACzBjrB,KAAKikE,wBAAwBz0D,KAAKyb,E,CAEpC,OAAOA,CACT,CAEOnU,QACL,IAAK,MAAM2jB,KAAKz6B,KAAK+jE,aAAatd,SAChChsB,EAAEhxB,UAEJzJ,KAAK+jE,aAAa96D,OACpB,CAEO,sBAAsB4C,EAAW6E,EAAcgqB,G,UACpD,IAAI2pC,EAAO,EACPC,EAAO,EACX,IAAK,MAAM7pC,KAAKz6B,KAAK+jE,aAAaQ,eAAe7zD,GAC/C2zD,EAAkB,QAAX,EAAA5pC,EAAElxB,QAAQsC,SAAC,QAAI,EACtBy4D,EAAOD,GAAuB,QAAf,EAAA5pC,EAAElxB,QAAQjD,aAAK,QAAI,GAC9BuF,GAAKw4D,GAAQx4D,EAAIy4D,KAAU5pC,IAAyB,QAAf,EAAAD,EAAElxB,QAAQmxB,aAAK,QAAI,YAAcA,WAClED,EAGZ,CAEOD,wBAAwB3uB,EAAW6E,EAAcgqB,EAAqCjqB,GAC3FzQ,KAAK+jE,aAAavd,aAAa91C,GAAM+pB,I,UACnCopC,EAAmB,QAAX,EAAAppC,EAAElxB,QAAQsC,SAAC,QAAI,EACvBi4D,EAAQD,GAAwB,QAAf,EAAAppC,EAAElxB,QAAQjD,aAAK,QAAI,GAChCuF,GAAKg4D,GAASh4D,EAAIi4D,KAAWppC,IAAyB,QAAf,EAAAD,EAAElxB,QAAQmxB,aAAK,QAAI,YAAcA,IAC1EjqB,EAASgqB,E,GAGf,CAEOhxB,UACL,IAAK,MAAMgxB,KAAKz6B,KAAK+jE,aAAatd,SAChCzmD,KAAKkkE,qBAAqB10D,KAAKirB,GAEjCz6B,KAAK8W,OACP,EAnFF,sBAsFA,MAAMqtD,UAAmB,EAAA3kE,WAkCvBC,YACkB8J,GAEhB3J,QAFgB,KAAA2J,QAAAA,EAhCX,KAAAgpD,YAAsB,EAEb,KAAA9mC,gBAAkBzrB,KAAK6B,SAAS,IAAI,EAAAoI,cACpC,KAAAjI,SAAWhC,KAAKyrB,gBAAgBthB,MAC/B,KAAAuoD,WAAa1yD,KAAK6B,SAAS,IAAI,EAAAoI,cAChC,KAAAukD,UAAYxuD,KAAK0yD,WAAWvoD,MAEpC,KAAAq6D,UAAuC,KAYvC,KAAAC,UAAuC,KAgB7CzkE,KAAKurB,OAAShiB,EAAQgiB,OAClBvrB,KAAKuJ,QAAQ8iB,uBAAyBrsB,KAAKuJ,QAAQ8iB,qBAAqB7oB,WAC1ExD,KAAKuJ,QAAQ8iB,qBAAqB7oB,SAAW,OAEjD,CA/BWm3B,yBAQT,OAPuB,OAAnB36B,KAAKwkE,YACHxkE,KAAKuJ,QAAQ6e,gBACfpoB,KAAKwkE,UAAY,EAAAt+D,IAAIsS,QAAQxY,KAAKuJ,QAAQ6e,iBAE1CpoB,KAAKwkE,eAAYh6D,GAGdxK,KAAKwkE,SACd,CAGW5pC,yBAQT,OAPuB,OAAnB56B,KAAKykE,YACHzkE,KAAKuJ,QAAQm7D,gBACf1kE,KAAKykE,UAAY,EAAAv+D,IAAIsS,QAAQxY,KAAKuJ,QAAQm7D,iBAE1C1kE,KAAKykE,eAAYj6D,GAGdxK,KAAKykE,SACd,CAYgBh7D,UACdzJ,KAAK0yD,WAAWljD,OAChB5P,MAAM6J,SACR,E,oHC3IF,gBACA,UAEA,MAAak7D,EAIXllE,eAAeiN,GAFP,KAAAk4D,SAAW,IAAIp4D,IAGrB,IAAK,MAAOsxB,EAAI+mC,KAAYn4D,EAC1B1M,KAAK4I,IAAIk1B,EAAI+mC,EAEjB,CAEOj8D,IAAOk1B,EAA2BmhC,GACvC,MAAMtuD,EAAS3Q,KAAK4kE,SAAS97D,IAAIg1B,GAEjC,OADA99B,KAAK4kE,SAASh8D,IAAIk1B,EAAImhC,GACftuD,CACT,CAEOtE,QAAQoE,GACb,IAAK,MAAO5N,EAAKqE,KAAUlH,KAAK4kE,SAASl4D,UACvC+D,EAAS5N,EAAKqE,EAElB,CAEOwG,IAAIowB,GACT,OAAO99B,KAAK4kE,SAASl3D,IAAIowB,EAC3B,CAEOh1B,IAAOg1B,GACZ,OAAO99B,KAAK4kE,SAAS97D,IAAIg1B,EAC3B,EA5BF,sBA+BA,6BAKEr+B,cAFiB,KAAAqlE,UAA+B,IAAIH,EAGlD3kE,KAAK8kE,UAAUl8D,IAAI,EAAA2uB,sBAAuBv3B,KAC5C,CAEOsW,WAAcwnB,EAA2BmhC,GAC9Cj/D,KAAK8kE,UAAUl8D,IAAIk1B,EAAImhC,EACzB,CAEO8F,WAAcjnC,GACnB,OAAO99B,KAAK8kE,UAAUh8D,IAAIg1B,EAC5B,CAEO3nB,eAAkB6uD,KAAcxgB,GACrC,MAAMygB,GAAsB,IAAAC,wBAAuBF,GAAMG,MAAK,CAAC/lE,EAAGsoC,IAAMtoC,EAAEuO,MAAQ+5B,EAAE/5B,QAE9Ey3D,EAAqB,GAC3B,IAAK,MAAMC,KAAcJ,EAAqB,CAC5C,MAAMJ,EAAU7kE,KAAK8kE,UAAUh8D,IAAIu8D,EAAWvnC,IAC9C,IAAK+mC,EACH,MAAM,IAAIljE,MAAM,oBAAoBqjE,EAAKvC,mCAAmC4C,EAAWvnC,OAEzFsnC,EAAY5gE,KAAKqgE,E,CAGnB,MAAMS,EAAqBL,EAAoB/jE,OAAS,EAAI+jE,EAAoB,GAAGt3D,MAAQ62C,EAAKtjD,OAGhG,GAAIsjD,EAAKtjD,SAAWokE,EAClB,MAAM,IAAI3jE,MAAM,gDAAgDqjE,EAAKvC,oBAAoB6C,EAAqB,oBAAoB9gB,EAAKtjD,2BAIzI,OAAO,IAAI8jE,KAAQ,IAAIxgB,KAAS4gB,GAClC,E,igBC9EF,eACA,UAgBMG,EAAwD,CAC5D5pD,MAAO,EAAA21B,aAAamN,MACpB+mB,KAAM,EAAAl0B,aAAam0B,KACnBhzD,KAAM,EAAA6+B,aAAaC,KACnB3S,MAAO,EAAA0S,aAAao0B,MACpBC,IAAK,EAAAr0B,aAAas0B,KAKpB,IAAaj2B,EAAb,cAAgC,EAAAnwC,WAK9BC,YACoC8Q,GAElC3Q,QAFkC,KAAA2Q,gBAAAA,EAH7B,KAAA+Q,SAAyB,EAAAgwB,aAAas0B,IAM3C5lE,KAAK6lE,kBACL7lE,KAAK6B,SAAS7B,KAAKuQ,gBAAgB8O,uBAAuB,YAAY,IAAMrf,KAAK6lE,oBACnF,CAEQA,kBACN7lE,KAAKshB,SAAWikD,EAAqBvlE,KAAKuQ,gBAAgBM,WAAWyQ,SACvE,CAEQwkD,wBAAwBC,GAC9B,IAAK,IAAI1mE,EAAI,EAAGA,EAAI0mE,EAAe7kE,OAAQ7B,IACR,mBAAtB0mE,EAAe1mE,KACxB0mE,EAAe1mE,GAAK0mE,EAAe1mE,KAGzC,CAEQ2mE,KAAK38D,EAAe48D,EAAiBF,GAC3C/lE,KAAK8lE,wBAAwBC,GAC7B18D,EAAK2pC,KAAKxgC,QA7BK,aA6BiByzD,KAAYF,EAC9C,CAEOpqD,MAAMsqD,KAAoBF,GAC3B/lE,KAAKshB,UAAY,EAAAgwB,aAAamN,OAChCz+C,KAAKgmE,KAAKxzD,QAAQ0zD,IAAKD,EAASF,EAEpC,CAEOP,KAAKS,KAAoBF,GAC1B/lE,KAAKshB,UAAY,EAAAgwB,aAAam0B,MAChCzlE,KAAKgmE,KAAKxzD,QAAQgzD,KAAMS,EAASF,EAErC,CAEOtzD,KAAKwzD,KAAoBF,GAC1B/lE,KAAKshB,UAAY,EAAAgwB,aAAaC,MAChCvxC,KAAKgmE,KAAKxzD,QAAQC,KAAMwzD,EAASF,EAErC,CAEOnnC,MAAMqnC,KAAoBF,GAC3B/lE,KAAKshB,UAAY,EAAAgwB,aAAao0B,OAChC1lE,KAAKgmE,KAAKxzD,QAAQosB,MAAOqnC,EAASF,EAEtC,GApDWp2B,EAAU,GAMlB,MAAAj9B,kBANQi9B,GAAA,EAAAA,WAAAA,C,4GC1Bb,gBACA,UAEA,SAEa,EAAAw2B,gBAAwD,CACnE14D,KAAM,GACN/M,KAAM,GACNo2B,aAAa,EACbE,YAAa,QACbxB,YAAa,EACb4wC,cAAc,EACd1sC,4BAA4B,EAC5BvP,mBAAoB,MACpBC,sBAAuB,EACvBiG,WAAY,kCACZC,SAAU,GACVyE,WAAY,SACZC,eAAgB,OAChB7a,WAAY,EACZsa,cAAe,EACf7jB,YAAa,KACb0Q,SAAU,OACVmpC,WAAY,IACZ1mC,mBAAmB,EACnBsG,kBAAmB,EACnBlL,kBAAkB,EAClBkK,qBAAsB,EACtBxF,iBAAiB,EACjBogB,+BAA+B,EAC/BzI,qBAAsB,EACtBooC,cAAc,EACdyC,kBAAkB,EAClBC,mBAAmB,EACnBhY,aAAc,EACdhmB,MAAO,CAAC,EACRxtB,sBAAuB,EAAA3V,MACvBq1C,cAAe,CAAC,EAChBnI,aAAa,EACb1L,cAAe,eACfzB,qBAAqB,EACrBib,YAAY,EACZyB,SAAU,QACV57B,cAAc,EACd1G,mBAAoB,GAGtB,MAAMinD,EAAqD,CAAC,SAAU,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAEtI,MAAa92B,UAAuB,EAAAjwC,WASlCC,YAAY8J,GACV3J,QAJe,KAAA4mE,gBAAkBxmE,KAAK6B,SAAS,IAAI,EAAAoI,cACrC,KAAA+pB,eAAiBh0B,KAAKwmE,gBAAgBr8D,MAKpD,MAAMs8D,EAAiB,OAAH,UAAQ,EAAAN,iBAC5B,IAAK,MAAMtjE,KAAO0G,EAChB,GAAI1G,KAAO4jE,EACT,IACE,MAAMv2C,EAAW3mB,EAAQ1G,GACzB4jE,EAAe5jE,GAAO7C,KAAK0mE,2BAA2B7jE,EAAKqtB,E,CAC3D,MAAOpvB,GACP0R,QAAQosB,MAAM99B,E,CAMpBd,KAAK6Q,WAAa41D,EAClBzmE,KAAKuJ,QAAU,OAAH,UAASk9D,GACrBzmE,KAAK2mE,eACP,CAGOtnD,uBAAyDxc,EAAQoR,GACtE,OAAOjU,KAAKg0B,gBAAe4yC,IACrBA,IAAa/jE,GACfoR,EAASjU,KAAK6Q,WAAWhO,G,GAG/B,CAGOk6B,uBAAuBizB,EAAkC/7C,GAC9D,OAAOjU,KAAKg0B,gBAAe4yC,KACO,IAA5B5W,EAAKllD,QAAQ87D,IACf3yD,G,GAGN,CAEQ0yD,gBACN,MAAME,EAAUC,IACd,KAAMA,KAAY,EAAAX,iBAChB,MAAM,IAAIxkE,MAAM,uBAAuBmlE,MAEzC,OAAO9mE,KAAK6Q,WAAWi2D,EAAS,EAG5BC,EAAS,CAACD,EAAkB5/D,KAChC,KAAM4/D,KAAY,EAAAX,iBAChB,MAAM,IAAIxkE,MAAM,uBAAuBmlE,MAGzC5/D,EAAQlH,KAAK0mE,2BAA2BI,EAAU5/D,GAE9ClH,KAAK6Q,WAAWi2D,KAAc5/D,IAChClH,KAAK6Q,WAAWi2D,GAAY5/D,EAC5BlH,KAAKwmE,gBAAgBh3D,KAAKs3D,G,EAI9B,IAAK,MAAMA,KAAY9mE,KAAK6Q,WAAY,CACtC,MAAMm2D,EAAO,CACXl+D,IAAK+9D,EAAOtlE,KAAKvB,KAAM8mE,GACvBl+D,IAAKm+D,EAAOxlE,KAAKvB,KAAM8mE,IAEzBj4D,OAAOo4D,eAAejnE,KAAKuJ,QAASu9D,EAAUE,E,CAElD,CAEQN,2BAA2B7jE,EAAaqE,GAC9C,OAAQrE,GACN,IAAK,cAIH,GAHKqE,IACHA,EAAQ,EAAAi/D,gBAAgBtjE,KAqDlC,SAAuBqE,GACrB,MAAiB,UAAVA,GAA+B,cAAVA,GAAmC,QAAVA,CACvD,CArDaggE,CAAchgE,GACjB,MAAM,IAAIvF,MAAM,IAAIuF,+BAAmCrE,KAEzD,MACF,IAAK,gBACEqE,IACHA,EAAQ,EAAAi/D,gBAAgBtjE,IAE1B,MACF,IAAK,aACL,IAAK,iBACH,GAAqB,iBAAVqE,GAAsB,GAAKA,GAASA,GAAS,IAEtD,MAEFA,EAAQq/D,EAAoBx0D,SAAS7K,GAASA,EAAQ,EAAAi/D,gBAAgBtjE,GACtE,MACF,IAAK,cACHqE,EAAQuM,KAAKwW,MAAM/iB,GAErB,IAAK,aACL,IAAK,eACH,GAAIA,EAAQ,EACV,MAAM,IAAIvF,MAAM,GAAGkB,mCAAqCqE,KAE1D,MACF,IAAK,uBACHA,EAAQuM,KAAKG,IAAI,EAAGH,KAAKC,IAAI,GAAID,KAAKmV,MAAc,GAAR1hB,GAAc,KAC1D,MACF,IAAK,aAEH,IADAA,EAAQuM,KAAKC,IAAIxM,EAAO,aACZ,EACV,MAAM,IAAIvF,MAAM,GAAGkB,mCAAqCqE,KAE1D,MACF,IAAK,wBACL,IAAK,oBACH,GAAIA,GAAS,EACX,MAAM,IAAIvF,MAAM,GAAGkB,+CAAiDqE,KAExE,IAAK,OACL,IAAK,OACH,IAAKA,GAAmB,IAAVA,EACZ,MAAM,IAAIvF,MAAM,GAAGkB,6BAA+BqE,KAIxD,OAAOA,CACT,EApIF,kB,qgBCnDA,gBAGA,IAAaopC,EAAb,MAiBE7wC,YACmCkK,GAAA,KAAAA,eAAAA,EAf3B,KAAA8oD,QAAU,EAKV,KAAA0U,eAAmD,IAAI36D,IAOvD,KAAA46D,cAAsE,IAAI56D,GAKlF,CAEOu4C,aAAajjC,GAClB,MAAMje,EAAS7D,KAAK2J,eAAe9F,OAGnC,QAAgB2G,IAAZsX,EAAKgc,GAAkB,CACzB,MAAMvS,EAAS1nB,EAAOkf,UAAUlf,EAAO8V,MAAQ9V,EAAOiI,GAChDs1B,EAA2B,CAC/Btf,OACAgc,GAAI99B,KAAKyyD,UACT3uD,MAAO,CAACynB,IAIV,OAFAA,EAAOijC,WAAU,IAAMxuD,KAAKqnE,sBAAsBjmC,EAAO7V,KACzDvrB,KAAKonE,cAAcx+D,IAAIw4B,EAAMtD,GAAIsD,GAC1BA,EAAMtD,E,CAIf,MAAMwpC,EAAWxlD,EACXjf,EAAM7C,KAAKunE,eAAeD,GAC1B35B,EAAQ3tC,KAAKmnE,eAAer+D,IAAIjG,GACtC,GAAI8qC,EAEF,OADA3tC,KAAK4/C,cAAcjS,EAAM7P,GAAIj6B,EAAO8V,MAAQ9V,EAAOiI,GAC5C6hC,EAAM7P,GAIf,MAAMvS,EAAS1nB,EAAOkf,UAAUlf,EAAO8V,MAAQ9V,EAAOiI,GAChDs1B,EAA6B,CACjCtD,GAAI99B,KAAKyyD,UACT5vD,IAAK7C,KAAKunE,eAAeD,GACzBxlD,KAAMwlD,EACNxjE,MAAO,CAACynB,IAKV,OAHAA,EAAOijC,WAAU,IAAMxuD,KAAKqnE,sBAAsBjmC,EAAO7V,KACzDvrB,KAAKmnE,eAAev+D,IAAIw4B,EAAMv+B,IAAKu+B,GACnCphC,KAAKonE,cAAcx+D,IAAIw4B,EAAMtD,GAAIsD,GAC1BA,EAAMtD,EACf,CAEO8hB,cAAc4nB,EAAgB17D,GACnC,MAAMs1B,EAAQphC,KAAKonE,cAAct+D,IAAI0+D,GACrC,GAAKpmC,GAGDA,EAAMt9B,MAAM2jE,OAAM3mE,GAAKA,EAAE4P,OAAS5E,IAAI,CACxC,MAAMyf,EAASvrB,KAAK2J,eAAe9F,OAAOkf,UAAUjX,GACpDs1B,EAAMt9B,MAAMU,KAAK+mB,GACjBA,EAAOijC,WAAU,IAAMxuD,KAAKqnE,sBAAsBjmC,EAAO7V,I,CAE7D,CAEO9Z,YAAY+1D,G,MACjB,OAAqC,QAA9B,EAAAxnE,KAAKonE,cAAct+D,IAAI0+D,UAAO,eAAE1lD,IACzC,CAEQylD,eAAeG,GACrB,MAAO,GAAGA,EAAS5pC,OAAO4pC,EAASh2D,KACrC,CAEQ21D,sBAAsBjmC,EAAgD7V,GAC5E,MAAM5d,EAAQyzB,EAAMt9B,MAAMgH,QAAQygB,IACnB,IAAX5d,IAGJyzB,EAAMt9B,MAAMiH,OAAO4C,EAAO,GACC,IAAvByzB,EAAMt9B,MAAM5C,cACQsJ,IAAlB42B,EAAMtf,KAAKgc,IACb99B,KAAKmnE,eAAev7C,OAAQwV,EAA8Bv+B,KAE5D7C,KAAKonE,cAAcx7C,OAAOwV,EAAMtD,KAEpC,GA7FWwS,EAAc,GAkBtB,MAAAlgC,iBAlBQkgC,GAAA,EAAAA,eAAAA,C,eCkCb,SAASq3B,EAAuB7pC,EAAcp6B,EAAkBiK,GACzDjK,EAAwB,YAAMA,EAChCA,EAA8B,gBAAEc,KAAK,CAAEs5B,KAAInwB,WAE3CjK,EAA8B,gBAAI,CAAC,CAAEo6B,KAAInwB,UACzCjK,EAAwB,UAAIA,EAEjC,C,qHAhCa,EAAAkkE,gBAAwD,IAAIp7D,IAEzE,kCAAuCw4D,GACrC,OAAOA,EAAoB,iBAAK,EAClC,EAEA,2BAAmClnC,GACjC,GAAI,EAAA8pC,gBAAgBl6D,IAAIowB,GACtB,OAAO,EAAA8pC,gBAAgB9+D,IAAIg1B,GAG7B,MAAM+pC,EAAiB,SAAUnkE,EAAkBb,EAAa8K,GAC9D,GAAyB,IAArBm6D,UAAU5mE,OACZ,MAAM,IAAIS,MAAM,oEAGlBgmE,EAAuBE,EAAWnkE,EAAQiK,EAC5C,EAKA,OAHAk6D,EAAUniE,SAAW,IAAMo4B,EAE3B,EAAA8pC,gBAAgBh/D,IAAIk1B,EAAI+pC,GACjBA,CACT,C,+QC/BA,gBAmJA,IAAYv2B,EAhJC,EAAAlhC,gBAAiB,IAAA42B,iBAAgC,iBAqBjD,EAAA+I,mBAAoB,IAAA/I,iBAAmC,oBAgCvD,EAAAxW,cAAe,IAAAwW,iBAA8B,eAsC7C,EAAAqJ,iBAAkB,IAAArJ,iBAAiC,kBA4CnD,EAAAzP,uBAAwB,IAAAyP,iBAAuC,yBAShEsK,EAAA,EAAAA,eAAA,EAAAA,aAAY,KACtB,mBACA,mBACA,mBACA,qBACA,iBAGW,EAAA1B,aAAc,IAAA5I,iBAA6B,cAY3C,EAAAt0B,iBAAkB,IAAAs0B,iBAAiC,kBAiHnD,EAAAr0B,iBAAkB,IAAAq0B,iBAAiC,kBAgBnD,EAAAkJ,iBAAkB,IAAAlJ,iBAAiC,kBAwBnD,EAAAzwB,oBAAqB,IAAAywB,iBAAoC,oB,0FCnUtE,gBACA,SAEA,uBAUEvnC,cAPQ,KAAAsoE,WAAuDl5D,OAAOqqD,OAAO,MACrE,KAAAC,QAAkB,GAGT,KAAA6O,UAAY,IAAI,EAAA/9D,aACjB,KAAAg+D,SAAWjoE,KAAKgoE,UAAU79D,MAGxC,MAAM+9D,EAAkB,IAAI,EAAAC,UAC5BnoE,KAAK6B,SAASqmE,GACdloE,KAAKm5D,QAAU+O,EAAgB7Q,QAC/Br3D,KAAKooE,gBAAkBF,CACzB,CAEOz+D,UACLzJ,KAAKgoE,UAAUv+D,SACjB,CAEWi3D,eACT,OAAO7xD,OAAOmhD,KAAKhwD,KAAK+nE,WAC1B,CAEWpH,oBACT,OAAO3gE,KAAKm5D,OACd,CAEWwH,kBAActJ,GACvB,IAAKr3D,KAAK+nE,WAAW1Q,GACnB,MAAM,IAAI11D,MAAM,4BAA4B01D,MAE9Cr3D,KAAKm5D,QAAU9B,EACfr3D,KAAKooE,gBAAkBpoE,KAAK+nE,WAAW1Q,GACvCr3D,KAAKgoE,UAAUx4D,KAAK6nD,EACtB,CAEOx1D,SAAS4+D,GACdzgE,KAAK+nE,WAAWtH,EAASpJ,SAAWoJ,CACtC,CAKOhhB,QAAQ6X,GACb,OAAOt3D,KAAKooE,gBAAgB3oB,QAAQ6X,EACtC,CAEO+Q,mBAAmB97B,GACxB,IAAI57B,EAAS,EACb,MAAMzP,EAASqrC,EAAErrC,OACjB,IAAK,IAAI7B,EAAI,EAAGA,EAAI6B,IAAU7B,EAAG,CAC/B,IAAIk4C,EAAOhL,EAAEloB,WAAWhlB,GAExB,GAAI,OAAUk4C,GAAQA,GAAQ,MAAQ,CACpC,KAAMl4C,GAAK6B,EAMT,OAAOyP,EAAS3Q,KAAKy/C,QAAQlI,GAE/B,MAAM2M,EAAS3X,EAAEloB,WAAWhlB,GAGxB,OAAU6kD,GAAUA,GAAU,MAChC3M,EAAyB,MAAjBA,EAAO,OAAkB2M,EAAS,MAAS,MAEnDvzC,GAAU3Q,KAAKy/C,QAAQyE,E,CAG3BvzC,GAAU3Q,KAAKy/C,QAAQlI,E,CAEzB,OAAO5mC,CACT,E,GCnFE23D,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBh+D,IAAjBi+D,EACH,OAAOA,EAAazpE,QAGrB,IAAIC,EAASqpE,EAAyBE,GAAY,CAGjDxpE,QAAS,CAAC,GAOX,OAHA0pE,EAAoBF,GAAUx1B,KAAK/zC,EAAOD,QAASC,EAAQA,EAAOD,QAASupE,GAGpEtpE,EAAOD,OACf,C,gGCfA,gBACA,UAEA,UACA,UACA,UACA,UAMM2pE,EAA2B,CAAC,OAAQ,QAE1C,iBAOElpE,YAAY8J,GACVvJ,KAAK+/D,MAAQ,IAAI,EAAAtrD,SAAalL,GAC9BvJ,KAAK4oE,cAAgB,IAAI,EAAAC,aAEzB7oE,KAAK8oE,eAAiB,OAAH,UAAS9oE,KAAK+/D,MAAMx2D,SACvC,MAAMs9D,EAAUC,GACP9mE,KAAK+/D,MAAMx2D,QAAQu9D,GAEtBC,EAAS,CAACD,EAAkB5/D,KAChClH,KAAK+oE,sBAAsBjC,GAC3B9mE,KAAK+/D,MAAMx2D,QAAQu9D,GAAY5/D,CAAK,EAGtC,IAAK,MAAM4/D,KAAY9mE,KAAK+/D,MAAMx2D,QAAS,CACzC,MAAMy9D,EAAO,CACXl+D,IAAK+9D,EAAOtlE,KAAKvB,KAAM8mE,GACvBl+D,IAAKm+D,EAAOxlE,KAAKvB,KAAM8mE,IAEzBj4D,OAAOo4D,eAAejnE,KAAK8oE,eAAgBhC,EAAUE,E,CAEzD,CAEQ+B,sBAAsBjC,GAI5B,GAAI6B,EAAyB52D,SAAS+0D,GACpC,MAAM,IAAInlE,MAAM,WAAWmlE,wCAE/B,CAEQkC,oBACN,IAAKhpE,KAAK+/D,MAAM3gD,eAAevO,WAAWw1D,iBACxC,MAAM,IAAI1kE,MAAM,uEAEpB,CAEW+T,aAAyB,OAAO1V,KAAK+/D,MAAMrqD,MAAQ,CACnDu5B,eAA6B,OAAOjvC,KAAK+/D,MAAM9wB,QAAU,CACzD/5B,mBAA+B,OAAOlV,KAAK+/D,MAAM7qD,YAAc,CAC/Di6B,aAA2B,OAAOnvC,KAAK+/D,MAAM5wB,MAAQ,CACrDxsC,YAA4D,OAAO3C,KAAK+/D,MAAMp9D,KAAO,CACrFJ,iBAA6B,OAAOvC,KAAK+/D,MAAMx9D,UAAY,CAC3DP,eAAqD,OAAOhC,KAAK+/D,MAAM/9D,QAAU,CACjFF,eAAqD,OAAO9B,KAAK+/D,MAAMj+D,QAAU,CACjFK,eAA6B,OAAOnC,KAAK+/D,MAAM59D,QAAU,CACzDmT,wBAAoC,OAAOtV,KAAK+/D,MAAMzqD,iBAAmB,CACzEE,oBAAkC,OAAOxV,KAAK+/D,MAAMvqD,aAAe,CACnE+5B,oBAAgC,OAAOvvC,KAAK+/D,MAAMxwB,aAAe,CAEjE7tC,cAAqC,OAAO1B,KAAK+/D,MAAMr+D,OAAS,CAChEunE,aAIT,OAHKjpE,KAAKi1C,UACRj1C,KAAKi1C,QAAU,IAAI,EAAAi0B,UAAUlpE,KAAK+/D,QAE7B//D,KAAKi1C,OACd,CACWk0B,cAET,OADAnpE,KAAKgpE,oBACE,IAAI,EAAAI,WAAWppE,KAAK+/D,MAC7B,CACWj5D,eAA8C,OAAO9G,KAAK+/D,MAAMj5D,QAAU,CAC1EpG,WAAiB,OAAOV,KAAK+/D,MAAMr/D,IAAM,CACzC+M,WAAiB,OAAOzN,KAAK+/D,MAAMtyD,IAAM,CACzC5J,aAIT,OAHK7D,KAAK8uD,UACR9uD,KAAK8uD,QAAU,IAAI,EAAAua,mBAAmBrpE,KAAK+/D,QAEtC//D,KAAK8uD,OACd,CACWhsC,cAET,OADA9iB,KAAKgpE,oBACEhpE,KAAK+/D,MAAMj9C,OACpB,CACWs8B,YACT,MAAMoD,EAAIxiD,KAAK+/D,MAAMh5D,YAAYC,gBACjC,IAAIsiE,EAA+D,OACnE,OAAQtpE,KAAK+/D,MAAMhhD,iBAAiB0C,gBAClC,IAAK,MAAO6nD,EAAoB,MAAO,MACvC,IAAK,QAASA,EAAoB,QAAS,MAC3C,IAAK,OAAQA,EAAoB,OAAQ,MACzC,IAAK,MAAOA,EAAoB,MAElC,MAAO,CACLC,0BAA2B/mB,EAAE3gC,sBAC7B2nD,sBAAuBhnB,EAAET,kBACzBn7C,mBAAoB47C,EAAE57C,mBACtBu4C,WAAYn/C,KAAK+/D,MAAMh5D,YAAYq4C,MAAMD,WACzCmqB,kBAAmBA,EACnBG,WAAYjnB,EAAE76B,OACd+hD,sBAAuBlnB,EAAEpC,kBACzBupB,cAAennB,EAAEvpC,UACjBgmC,eAAgBuD,EAAEtD,WAEtB,CACW31C,cACT,OAAOvJ,KAAK8oE,cACd,CACWv/D,YAAQA,GACjB,IAAK,MAAMu9D,KAAYv9D,EACrBvJ,KAAK8oE,eAAehC,GAAYv9D,EAAQu9D,EAE5C,CACO1tD,OACLpZ,KAAK+/D,MAAM3mD,MACb,CACO1U,QACL1E,KAAK+/D,MAAMr7D,OACb,CACOyY,OAAOysD,EAAiBlpE,GAC7BV,KAAK6pE,gBAAgBD,EAASlpE,GAC9BV,KAAK+/D,MAAM5iD,OAAOysD,EAASlpE,EAC7B,CACO0R,KAAKoJ,GACVxb,KAAK+/D,MAAM3tD,KAAKoJ,EAClB,CACOgH,4BAA4BC,GACjCziB,KAAK+/D,MAAMv9C,4BAA4BC,EACzC,CACO9X,qBAAqBC,GAC1B,OAAO5K,KAAK+/D,MAAMp1D,qBAAqBC,EACzC,CACO8X,wBAAwBpZ,GAE7B,OADAtJ,KAAKgpE,oBACEhpE,KAAK+/D,MAAMr9C,wBAAwBpZ,EAC5C,CACOsZ,0BAA0BD,GAC/B3iB,KAAKgpE,oBACLhpE,KAAK+/D,MAAMn9C,0BAA0BD,EACvC,CACOmnD,eAAe9mD,EAAwB,GAE5C,OADAhjB,KAAK6pE,gBAAgB7mD,GACdhjB,KAAK+/D,MAAMh9C,UAAUC,EAC9B,CACOC,mBAAmBC,G,UAGxB,OAFAljB,KAAKgpE,oBACLhpE,KAAK+pE,wBAA2C,QAAnB,EAAA7mD,EAAkBrX,SAAC,QAAI,EAA0B,QAAvB,EAAAqX,EAAkB5c,aAAK,QAAI,EAA2B,QAAxB,EAAA4c,EAAkB9c,cAAM,QAAI,GAC1GpG,KAAK+/D,MAAM98C,mBAAmBC,EACvC,CACO5I,eACL,OAAOta,KAAK+/D,MAAMzlD,cACpB,CACOjS,OAAO8a,EAAgB5C,EAAarf,GACzClB,KAAK6pE,gBAAgB1mD,EAAQ5C,EAAKrf,GAClClB,KAAK+/D,MAAM13D,OAAO8a,EAAQ5C,EAAKrf,EACjC,CACOmiB,eACL,OAAOrjB,KAAK+/D,MAAM18C,cACpB,CACOC,uBACL,OAAOtjB,KAAK+/D,MAAMz8C,sBACpB,CACOG,iBACLzjB,KAAK+/D,MAAMt8C,gBACb,CACOC,YACL1jB,KAAK+/D,MAAMr8C,WACb,CACOC,YAAY1hB,EAAeC,GAChClC,KAAK6pE,gBAAgB5nE,EAAOC,GAC5BlC,KAAK+/D,MAAMp8C,YAAY1hB,EAAOC,EAChC,CACOuH,UACLzJ,KAAK4oE,cAAcn/D,UACnBzJ,KAAK+/D,MAAMt2D,SACb,CACOhF,YAAYoZ,GACjB7d,KAAK6pE,gBAAgBhsD,GACrB7d,KAAK+/D,MAAMt7D,YAAYoZ,EACzB,CACOg0B,YAAYC,GACjB9xC,KAAK6pE,gBAAgB/3B,GACrB9xC,KAAK+/D,MAAMluB,YAAYC,EACzB,CACOC,cACL/xC,KAAK+/D,MAAMhuB,aACb,CACO/tB,iBACLhkB,KAAK+/D,MAAM/7C,gBACb,CACOguB,aAAathC,GAClB1Q,KAAK6pE,gBAAgBn5D,GACrB1Q,KAAK+/D,MAAM/tB,aAAathC,EAC1B,CACOzH,QACLjJ,KAAK+/D,MAAM92D,OACb,CACOkoC,MAAMrvB,EAA2BrR,GACtCzQ,KAAK+/D,MAAM5uB,MAAMrvB,EAAMrR,EACzB,CACOu5D,QAAQloD,EAA2BrR,GACxCzQ,KAAK+/D,MAAM5uB,MAAMrvB,GACjB9hB,KAAK+/D,MAAM5uB,MAAM,OAAQ1gC,EAC3B,CACO5J,MAAMib,GACX9hB,KAAK+/D,MAAMl5D,MAAMib,EACnB,CACOtc,QAAQvD,EAAeC,GAC5BlC,KAAK6pE,gBAAgB5nE,EAAOC,GAC5BlC,KAAK+/D,MAAMv6D,QAAQvD,EAAOC,EAC5B,CACO4U,QACL9W,KAAK+/D,MAAMjpD,OACb,CACO0O,oBACLxlB,KAAK+/D,MAAMv6C,mBACb,CACO05C,UAAU+K,GACf,OAAOjqE,KAAK4oE,cAAc1J,UAAUl/D,KAAMiqE,EAC5C,CACkBC,qBAChB,OAAOjlE,CACT,CAEQ4kE,mBAAmBpjB,GACzB,IAAK,MAAMv/C,KAASu/C,EAClB,GAAIv/C,IAAUijE,KAAY34B,MAAMtqC,IAAUA,EAAQ,GAAM,EACtD,MAAM,IAAIvF,MAAM,iCAGtB,CAEQooE,2BAA2BtjB,GACjC,IAAK,MAAMv/C,KAASu/C,EAClB,GAAIv/C,IAAUA,IAAUijE,KAAY34B,MAAMtqC,IAAUA,EAAQ,GAAM,GAAKA,EAAQ,GAC7E,MAAM,IAAIvF,MAAM,0CAGtB,E","sources":["webpack://xterm/webpack/universalModuleDefinition","webpack://xterm/./src/browser/AccessibilityManager.ts","webpack://xterm/./src/browser/Clipboard.ts","webpack://xterm/./src/browser/ColorContrastCache.ts","webpack://xterm/./src/browser/Dom.ts","webpack://xterm/./src/browser/Lifecycle.ts","webpack://xterm/./src/browser/Linkifier2.ts","webpack://xterm/./src/browser/LocalizableStrings.ts","webpack://xterm/./src/browser/OscLinkProvider.ts","webpack://xterm/./src/browser/RenderDebouncer.ts","webpack://xterm/./src/browser/ScreenDprMonitor.ts","webpack://xterm/./src/browser/Terminal.ts","webpack://xterm/./src/browser/TimeBasedDebouncer.ts","webpack://xterm/./src/browser/Viewport.ts","webpack://xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://xterm/./src/browser/input/CompositionHelper.ts","webpack://xterm/./src/browser/input/Mouse.ts","webpack://xterm/./src/browser/input/MoveToCell.ts","webpack://xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xterm/./src/browser/renderer/shared/Constants.ts","webpack://xterm/./src/browser/renderer/shared/RendererUtils.ts","webpack://xterm/./src/browser/selection/SelectionModel.ts","webpack://xterm/./src/browser/services/CharSizeService.ts","webpack://xterm/./src/browser/services/CharacterJoinerService.ts","webpack://xterm/./src/browser/services/CoreBrowserService.ts","webpack://xterm/./src/browser/services/MouseService.ts","webpack://xterm/./src/browser/services/RenderService.ts","webpack://xterm/./src/browser/services/SelectionService.ts","webpack://xterm/./src/browser/services/Services.ts","webpack://xterm/./src/browser/services/ThemeService.ts","webpack://xterm/./src/common/CircularList.ts","webpack://xterm/./src/common/Clone.ts","webpack://xterm/./src/common/Color.ts","webpack://xterm/./src/common/CoreTerminal.ts","webpack://xterm/./src/common/EventEmitter.ts","webpack://xterm/./src/common/InputHandler.ts","webpack://xterm/./src/common/Lifecycle.ts","webpack://xterm/./src/common/MultiKeyMap.ts","webpack://xterm/./src/common/Platform.ts","webpack://xterm/./src/common/SortedList.ts","webpack://xterm/./src/common/TaskQueue.ts","webpack://xterm/./src/common/WindowsMode.ts","webpack://xterm/./src/common/buffer/AttributeData.ts","webpack://xterm/./src/common/buffer/Buffer.ts","webpack://xterm/./src/common/buffer/BufferLine.ts","webpack://xterm/./src/common/buffer/BufferRange.ts","webpack://xterm/./src/common/buffer/BufferReflow.ts","webpack://xterm/./src/common/buffer/BufferSet.ts","webpack://xterm/./src/common/buffer/CellData.ts","webpack://xterm/./src/common/buffer/Constants.ts","webpack://xterm/./src/common/buffer/Marker.ts","webpack://xterm/./src/common/data/Charsets.ts","webpack://xterm/./src/common/data/EscapeSequences.ts","webpack://xterm/./src/common/input/Keyboard.ts","webpack://xterm/./src/common/input/TextDecoder.ts","webpack://xterm/./src/common/input/UnicodeV6.ts","webpack://xterm/./src/common/input/WriteBuffer.ts","webpack://xterm/./src/common/input/XParseColor.ts","webpack://xterm/./src/common/parser/Constants.ts","webpack://xterm/./src/common/parser/DcsParser.ts","webpack://xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://xterm/./src/common/parser/OscParser.ts","webpack://xterm/./src/common/parser/Params.ts","webpack://xterm/./src/common/public/AddonManager.ts","webpack://xterm/./src/common/public/BufferApiView.ts","webpack://xterm/./src/common/public/BufferLineApiView.ts","webpack://xterm/./src/common/public/BufferNamespaceApi.ts","webpack://xterm/./src/common/public/ParserApi.ts","webpack://xterm/./src/common/public/UnicodeApi.ts","webpack://xterm/./src/common/services/BufferService.ts","webpack://xterm/./src/common/services/CharsetService.ts","webpack://xterm/./src/common/services/CoreMouseService.ts","webpack://xterm/./src/common/services/CoreService.ts","webpack://xterm/./src/common/services/DecorationService.ts","webpack://xterm/./src/common/services/InstantiationService.ts","webpack://xterm/./src/common/services/LogService.ts","webpack://xterm/./src/common/services/OptionsService.ts","webpack://xterm/./src/common/services/OscLinkService.ts","webpack://xterm/./src/common/services/ServiceRegistry.ts","webpack://xterm/./src/common/services/Services.ts","webpack://xterm/./src/common/services/UnicodeService.ts","webpack://xterm/webpack/bootstrap","webpack://xterm/./src/browser/public/Terminal.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n    this.register(toDisposable(() => {\n      removeElementFromParent(this._accessibilityTreeRoot);\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityTreeRoot.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray, toDisposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const oldEvent = this._currentLink ? this._lastMouseEvent : undefined;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n          if (oldEvent && this._element) {\n            // re-eval previously active link after changes\n            const position = this._positionFromMouseEvent(oldEvent, this._element, this._mouseService!);\n            if (position) {\n              this._askForLink(position, false);\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService, IThemeService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { toDisposable } from 'common/Lifecycle';\nimport { ThemeService } from 'browser/services/ThemeService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager && this._renderService) {\n        this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n      }\n    } else {\n      this._accessibilityManager?.dispose();\n      this._accessibilityManager = undefined;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { removeElementFromParent } from 'browser/Dom';\nimport { BOLD_CLASS, CURSOR_BLINK_CLASS, CURSOR_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory, ITALIC_CLASS } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _cellToRowElements: Int16Array[] = [];\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n    }));\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.css.cell.width}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${colors.cursorAccent.css};` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (!this._cellToRowElements[y] || this._cellToRowElements[y].length !== this._bufferService.cols) {\n        this._cellToRowElements[y] = new Int16Array(this._bufferService.cols);\n      }\n      rowElement.replaceChildren(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.css.cell.width, this._bufferService.cols, this._cellToRowElements[y]));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    x = this._cellToRowElements[y][x];\n    x2 = this._cellToRowElements[y2][x2];\n\n    if (x === -1 || x2 === -1) {\n      return;\n    }\n\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number, cellMap: Int16Array): DocumentFragment {\n    // NOTE: `cellMap` maps cell positions to a span element index in a row.\n    // All positions should be updated, even skipped ones after wide chars or left overs at the end,\n    // otherwise the mouse hover logic might mark the wrong elements as underlined.\n\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    const colors = this._themeService.colors;\n    let elemIndex = -1;\n\n    let x = 0;\n    for (; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      // still have to update cellMap with current element index\n      if (width === 0) {\n        cellMap[x] = elemIndex;\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(`${UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (charElement.textContent === ' ') {\n          charElement.textContent = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n      cellMap[x] = ++elemIndex;\n\n      x = lastCharX;\n    }\n\n    // since the loop above might exit early not handling all cells,\n    // also set remaining cell positions to last element index\n    if (x < cols - 1) {\n      cellMap.subarray(x).fill(++elemIndex);\n    }\n\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._themeService.colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._themeService.colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n\n    // due to rounding issues in zoom states pixel values might be negative or overflow actual canvas\n    // ignore those events effectively narrowing mouse area a tiny bit at the edges\n    if (!this._charSizeService.hasValidSize\n      || coords[0] < 0\n      || coords[1] < 0\n      || coords[0] >= this._renderService.dimensions.css.canvas.width\n      || coords[1] >= this._renderService.dimensions.css.canvas.height) {\n      return undefined;\n    }\n\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback, ReadonlyColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { ThemeService } from 'browser/services/ThemeService';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: IRenderer | undefined;\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer?.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.css.canvas.width === this._canvasWidth && this._renderer.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer?.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer!.handleResize(cols, rows));\n    } else {\n      this._renderer.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { ColorIndex, IDisposable } from 'common/Types';\nimport { ITheme } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: ColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { ColorIndex, IColor } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._contrastCache = new ColorContrastCache();\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: ColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onSpecificOptionChange('windowsMode', e => this._handleWindowsModeOptionChange(e)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n\n    this.register(toDisposable(() => {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  private _handleWindowsModeOptionChange(value: boolean): void {\n    if (value) {\n      this._enableWindowsMode();\n    } else {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_SET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_RESET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character. Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover feedback.\n   * Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n   * `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    const midKey = this._getKey(this._array[mid]);\n    if (midKey > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (midKey < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { DebouncedIdleTask, IdleTaskQueue } from 'common/TaskQueue';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted lines,\n      // which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private _disposables: IDisposable[] = [];\n\n  private _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = new EventEmitter<IBufferApi>();\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => {\n      for (const d of this._decorations.values()) {\n        this._onDecorationRemoved.fire(d);\n      }\n      this.reset();\n    }));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","a","i","self","AccessibilityManager","Disposable","constructor","_terminal","_renderService","super","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_handleResize","onRender","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","window","setListener","addDisposableDomListener","toDisposable","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","test","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","css","cell","height","style","width","canvas","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","elements","parentElement","node","type","handler","options","disposed","dispose","Linkifier2","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","undefined","currentLink","_currentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_clearCurrentLink","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","oldEvent","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","remove","leave","lower","upper","current","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","result","linkHandler","rawOptions","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","open","opener","location","href","console","warn","IOptionsService","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","CoreTerminal","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_onWillOpen","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","onFocus","onWillOpen","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_accessibilityManager","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","IRenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","amount","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestScrollLines","suppressScrollEvent","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","optionsService","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","anchor","right","delete","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_coreBrowseService","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_width","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","TERMINAL_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_cellToRowElements","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_themeStyleElement","_dimensionsStyleElement","letterSpacing","overflow","styles","_terminalSelector","foreground","BOLD_CLASS","fontWeight","fontWeightBold","ITALIC_CLASS","cursor","cursorAccent","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","cursorWidth","CURSOR_STYLE_UNDERLINE_CLASS","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","c","INVERTED_DEFAULT_COLOR","opaque","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","replaceChildren","cursorAbsoluteY","cursorBlink","rowElement","cursorStyle","Int16Array","createRow","_setCellUnderline","enabled","span","textDecoration","IInstantiationService","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","cellMap","joinedRanges","getJoinedCharacters","getCode","NULL_CELL_CODE","elemIndex","isJoined","lastCharX","JoinedCellData","translateToString","charElement","isCursorHidden","isBold","isItalic","isDim","isInvisible","WHITESPACE_CELL_CHAR","getChars","isUnderline","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","isTop","forEachDecorationAtCell","d","layer","backgroundColorRGB","foregroundColorRGB","isInSelection","_isCellInSelection","resolvedBg","selectionForeground","isFocused","_addStyle","padStart","multiplyOpacity","_applyMinimumContrast","subarray","fill","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","contrastCache","ensureContrastRatio","padChar","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","firstCell","chars","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","static","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderer","_renderDebouncer","RenderDebouncer","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","g","b","toCss","toRgba","_onChangeColors","_contrastCache","ColorContrastCache","_colors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsModeOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","_windowsMode","_onScrollApi","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","getAttrData","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","prototype","split","clearRange","len","decode","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","f","isProtected","_disposables","unregister","array","_data","third","fourth","navigator","userAgent","platform","isSafari","majorVersion","isIpad","isIphone","_getKey","insert","_search","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","ext","_ext","_urlId","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","stringIndexToBufferIndex","lineIndex","stringIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onDispose","_removeMarker","iterator","startOverscan","endOverscan","BufferStringIterator","_buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","hasNext","next","$startIndex","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","isDisposed","_id","_nextId","_onDispose","disposable","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","num","ucs","bisearch","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","k","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","xmin","xmax","getKeyIterator","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","BufferNamespaceApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","writeln","addon","strings","Infinity"],"sourceRoot":""}